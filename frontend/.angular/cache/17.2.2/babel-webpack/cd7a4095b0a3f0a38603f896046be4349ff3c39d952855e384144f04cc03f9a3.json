{"ast":null,"code":"/*\n    Copyright 2008-2023\n        Matthias Ehmann,\n        Carsten Miller,\n        Alfred Wassermann\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true*/\n/*jslint nomen: true, plusplus: true*/\n\n/**\n * @fileoverview Implementation of smart labels..\n */\n\nimport JXG from \"../jxg\";\nimport Const from \"../base/constants\";\nimport Type from \"../utils/type\";\n\n/**\n * @class Smart label. These are customized text elements for displaying measurements of JSXGraph elements, like length of a\n * segment, perimeter or area of a circle or polygon (including polygonal chain), slope of a line, value of an angle, and coordinates of a point.\n * <p>\n * If additionally a text, or a function is supplied and the content is not the empty string,\n * that text is displayed instead of the measurement.\n * <p>\n * Smartlabels use custom made CSS layouts defined in jsxgraph.css. Therefore, the inclusion of the file jsxgraph.css is mandatory or\n * the CSS classes have to be replaced by other classes.\n * <p>\n * The default attributes for smartlabels are defined for each type of measured element in the following sub-objects.\n * This is a deviation from the usual JSXGraph attribute usage.\n * <ul>\n *  <li> <tt>JXG.Options.smartlabelangle</tt> for smartlabels of angle objects\n *  <li> <tt>JXG.Options.smartlabelcircle</tt> for smartlabels of circle objects\n *  <li> <tt>JXG.Options.smartlabelline</tt> for smartlabels of line objects\n *  <li> <tt>JXG.Options.smartlabelpoint</tt> for smartlabels of point objects.\n *  <li> <tt>JXG.Options.smartlabelpolygon</tt> for smartlabels of polygon objects.\n * </ul>\n *\n *\n * @pseudo\n * @name Smartlabel\n * @augments JXG.Text\n * @constructor\n * @type JXG.Text\n * @throws {Error} If the element cannot be constructed with the given parent objects an exception is thrown.\n * @param {JXG.GeometryElement} Parent parent object: point, line, circle, polygon, angle.\n * @param {String|Function} Txt Optional text. In case, this content is not the empty string,\n *  the measurement is overwritten by this text.\n *\n * @example\n * var p1 = board.create('point', [3, 4], {showInfobox: false, withLabel: false});\n * board.create('smartlabel', [p1], {digits: 1, unit: 'm', dir: 'col', useMathJax: false});\n *\n * </pre><div id=\"JXG30cd1f9e-7e78-48f3-91a2-9abd466a754f\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG30cd1f9e-7e78-48f3-91a2-9abd466a754f',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var p1 = board.create('point', [3, 4], {showInfobox: false, withLabel: false});\n *     board.create('smartlabel', [p1], {digits: 1, unit: 'cm', dir: 'col', useMathJax: false});\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var s1 = board.create('line', [[-7, 2], [6, -6]], {point1: {visible:true}, point2: {visible:true}});\n * board.create('smartlabel', [s1], {unit: 'm', measure: 'length', prefix: 'L = ', useMathJax: false});\n * board.create('smartlabel', [s1], {unit: 'm',  measure: 'slope', prefix: '&Delta; = ', useMathJax: false});\n *\n *\n * </pre><div id=\"JXGfb4423dc-ee3a-4122-a186-82123019a835\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXGfb4423dc-ee3a-4122-a186-82123019a835',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var s1 = board.create('line', [[-7, 2], [6, -6]], {point1: {visible:true}, point2: {visible:true}});\n *     board.create('smartlabel', [s1], {unit: 'm', measure: 'length', prefix: 'L = ', useMathJax: false});\n *     board.create('smartlabel', [s1], {unit: 'm',  measure: 'slope', prefix: '&Delta; = ', useMathJax: false});\n *\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var c1 = board.create('circle', [[0, 1], [4, 1]], {point2: {visible: true}});\n * board.create('smartlabel', [c1], {unit: 'm', measure: 'perimeter', prefix: 'U = ', useMathJax: false});\n * board.create('smartlabel', [c1], {unit: 'm', measure: 'area', prefix: 'A = ', useMathJax: false});\n * board.create('smartlabel', [c1], {unit: 'm', measure: 'radius', prefix: 'R = ', useMathJax: false});\n *\n *\n * </pre><div id=\"JXG763c4700-8273-4eb7-9ed9-1dc6c2c52e93\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG763c4700-8273-4eb7-9ed9-1dc6c2c52e93',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var c1 = board.create('circle', [[0, 1], [4, 1]], {point2: {visible: true}});\n *     board.create('smartlabel', [c1], {unit: 'm', measure: 'perimeter', prefix: 'U = ', useMathJax: false});\n *     board.create('smartlabel', [c1], {unit: 'm', measure: 'area', prefix: 'A = ', useMathJax: false});\n *     board.create('smartlabel', [c1], {unit: 'm', measure: 'radius', prefix: 'R = ', useMathJax: false});\n *\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var p2 = board.create('polygon', [[-6, -5], [7, -7], [-4, 3]], {});\n * board.create('smartlabel', [p2], {\n *     unit: 'm',\n *     measure: 'area',\n *     prefix: 'A = ',\n *     cssClass: 'smart-label-pure smart-label-polygon',\n *     highlightCssClass: 'smart-label-pure smart-label-polygon',\n *     useMathJax: false\n * });\n * board.create('smartlabel', [p2, () => 'X: ' + p2.vertices[0].X().toFixed(1)], {\n *     measure: 'perimeter',\n *     cssClass: 'smart-label-outline smart-label-polygon',\n *     highlightCssClass: 'smart-label-outline smart-label-polygon',\n *     useMathJax: false\n * });\n *\n * </pre><div id=\"JXG376425ac-b4e5-41f2-979c-6ff32a01e9c8\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG376425ac-b4e5-41f2-979c-6ff32a01e9c8',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var p2 = board.create('polygon', [[-6, -5], [7, -7], [-4, 3]], {});\n *     board.create('smartlabel', [p2], {\n *         unit: 'm',\n *         measure: 'area',\n *         prefix: 'A = ',\n *         cssClass: 'smart-label-pure smart-label-polygon',\n *         highlightCssClass: 'smart-label-pure smart-label-polygon',\n *         useMathJax: false\n *     });\n *     board.create('smartlabel', [p2, () => 'X: ' + p2.vertices[0].X().toFixed(1)], {\n *         measure: 'perimeter',\n *         cssClass: 'smart-label-outline smart-label-polygon',\n *         highlightCssClass: 'smart-label-outline smart-label-polygon',\n *         useMathJax: false\n *     });\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var a1 = board.create('angle', [[1, -1], [1, 2], [1, 5]], {name: '&beta;', withLabel: false});\n * var sma = board.create('smartlabel', [a1], {digits: 1, prefix: a1.name + '=', unit: '°', useMathJax: false});\n *\n * </pre><div id=\"JXG48d6d1ae-e04a-45f4-a743-273976712c0b\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG48d6d1ae-e04a-45f4-a743-273976712c0b',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var a1 = board.create('angle', [[1, -1], [1, 2], [1, 5]], {name: '&beta;', withLabel: false});\n *     var sma = board.create('smartlabel', [a1], {digits: 1, prefix: a1.name + '=', unit: '°', useMathJax: false});\n *\n *     })();\n *\n * </script><pre>\n *\n */\nJXG.createSmartLabel = function (board, parents, attributes) {\n  var el, attr, p, user_supplied_text, getTextFun, txt_fun;\n  if (parents.length === 0 || [Const.OBJECT_CLASS_POINT, Const.OBJECT_CLASS_LINE, Const.OBJECT_CLASS_CIRCLE].indexOf(parents[0].elementClass) < 0 && [Const.OBJECT_TYPE_POLYGON, Const.OBJECT_TYPE_ANGLE].indexOf(parents[0].type) < 0) {\n    throw new Error(\"JSXGraph: Can't create smartlabel with parent types \" + \"'\" + typeof parents[0] + \"', \" + \"'\" + typeof parents[1] + \"'.\");\n  }\n  p = parents[0];\n  user_supplied_text = parents[1] || '';\n  if (p.elementClass === Const.OBJECT_CLASS_POINT) {\n    attr = Type.copyAttributes(attributes, board.options, 'smartlabelpoint');\n  } else if (p.elementClass === Const.OBJECT_CLASS_LINE) {\n    attr = Type.copyAttributes(attributes, board.options, 'smartlabelline');\n    /**\n     * @class\n     * @ignore\n     */\n    attr.rotate = function () {\n      return Math.atan(p.getSlope()) * 180 / Math.PI;\n    };\n    /**\n     * @class\n     * @ignore\n     */\n    attr.visible = function () {\n      return p.L() < 1.5 ? false : true;\n    };\n  } else if (p.elementClass === Const.OBJECT_CLASS_CIRCLE) {\n    attr = Type.copyAttributes(attributes, board.options, 'smartlabelcircle');\n    /**\n     * @class\n     * @ignore\n     */\n    attr.visible = function () {\n      return p.Radius() < 1.5 ? false : true;\n    };\n  } else if (p.type === Const.OBJECT_TYPE_POLYGON) {\n    attr = Type.copyAttributes(attributes, board.options, 'smartlabelpolygon');\n  } else if (p.type === Const.OBJECT_TYPE_ANGLE) {\n    attr = Type.copyAttributes(attributes, board.options, 'smartlabelangle');\n    /**\n     * @class\n     * @ignore\n     */\n    attr.rotate = function () {\n      var c1 = p.center.coords.usrCoords,\n        c2 = p.getLabelAnchor().usrCoords,\n        v = Math.atan2(c2[2] - c1[2], c2[1] - c1[1]) * 180 / Math.PI;\n      return v > 90 && v < 270 ? v + 180 : v;\n    };\n    /**\n     * @class\n     * @ignore\n     */\n    attr.anchorX = function () {\n      var c1 = p.center.coords.usrCoords,\n        c2 = p.getLabelAnchor().usrCoords,\n        v = Math.atan2(c2[2] - c1[2], c2[1] - c1[1]) * 180 / Math.PI;\n      return v > 90 && v < 270 ? 'right' : 'left';\n    };\n  }\n  getTextFun = function (el, p, elType, mType) {\n    var measure;\n    switch (mType) {\n      case 'length':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.L();\n        };\n        break;\n      case 'slope':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.Slope();\n        };\n        break;\n      case 'area':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.Area();\n        };\n        break;\n      case 'radius':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.Radius();\n        };\n        break;\n      case 'perimeter':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.Perimeter();\n        };\n        break;\n      case 'rad':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.Value();\n        };\n        break;\n      case 'deg':\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return p.Value() * 180 / Math.PI;\n        };\n        break;\n      default:\n        /**\n         * @ignore\n         */\n        measure = function () {\n          return 0.0;\n        };\n    }\n    return function () {\n      var str = '',\n        val,\n        txt = Type.evaluate(user_supplied_text),\n        digits = Type.evaluate(el.visProp.digits),\n        u = Type.evaluate(el.visProp.unit),\n        pre = Type.evaluate(el.visProp.prefix),\n        suf = Type.evaluate(el.visProp.suffix),\n        mj = Type.evaluate(el.visProp.usemathjax) || Type.evaluate(el.visProp.usekatex);\n      if (txt === '') {\n        if (el.useLocale()) {\n          val = el.formatNumberLocale(measure(), digits);\n        } else {\n          val = Type.toFixed(measure(), digits);\n        }\n        if (mj) {\n          str = ['\\\\(', pre, val, '\\\\,', u, suf, '\\\\)'].join('');\n        } else {\n          str = [pre, val, u, suf].join('');\n        }\n      } else {\n        str = txt;\n      }\n      return str;\n    };\n  };\n  if (p.elementClass === Const.OBJECT_CLASS_POINT) {\n    el = board.create('text', [function () {\n      return p.X();\n    }, function () {\n      return p.Y();\n    }, ''], attr);\n    txt_fun = function () {\n      var str = '',\n        txt = Type.evaluate(user_supplied_text),\n        digits = Type.evaluate(el.visProp.digits),\n        u = Type.evaluate(el.visProp.unit),\n        pre = Type.evaluate(el.visProp.prefix),\n        suf = Type.evaluate(el.visProp.suffix),\n        dir = Type.evaluate(el.visProp.dir),\n        mj = Type.evaluate(el.visProp.usemathjax) || Type.evaluate(el.visProp.usekatex),\n        x,\n        y;\n      if (el.useLocale()) {\n        x = el.formatNumberLocale(p.X(), digits);\n        y = el.formatNumberLocale(p.Y(), digits);\n      } else {\n        x = Type.toFixed(p.X(), digits);\n        y = Type.toFixed(p.Y(), digits);\n      }\n      if (txt === '') {\n        if (dir === 'row') {\n          if (mj) {\n            str = ['\\\\(', pre, x, '\\\\,', u, ' / ', y, '\\\\,', u, suf, '\\\\)'].join('');\n          } else {\n            str = [pre, x, ' ', u, ' / ', y, ' ', u, suf].join('');\n          }\n        } else if (dir.indexOf('col') === 0) {\n          // Starts with 'col'\n          if (mj) {\n            str = ['\\\\(', pre, '\\\\left(\\\\array{', x, '\\\\,', u, '\\\\\\\\ ', y, '\\\\,', u, '}\\\\right)', suf, '\\\\)'].join('');\n          } else {\n            str = [pre, x, ' ', u, '<br/>', y, ' ', u, suf].join('');\n          }\n        }\n      } else {\n        str = txt;\n      }\n      return str;\n    };\n  } else if (p.elementClass === Const.OBJECT_CLASS_LINE) {\n    if (attr.measure === 'length') {\n      el = board.create('text', [function () {\n        return (p.point1.X() + p.point2.X()) * 0.5;\n      }, function () {\n        return (p.point1.Y() + p.point2.Y()) * 0.5;\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'line', 'length');\n    } else if (attr.measure === 'slope') {\n      el = board.create('text', [function () {\n        return p.point1.X() * 0.25 + p.point2.X() * 0.75;\n      }, function () {\n        return p.point1.Y() * 0.25 + p.point2.Y() * 0.75;\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'line', 'slope');\n    }\n  } else if (p.elementClass === Const.OBJECT_CLASS_CIRCLE) {\n    if (attr.measure === 'radius') {\n      el = board.create('text', [function () {\n        return p.center.X() + p.Radius() * 0.5;\n      }, function () {\n        return p.center.Y();\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'circle', 'radius');\n    } else if (attr.measure === 'area') {\n      el = board.create('text', [function () {\n        return p.center.X();\n      }, function () {\n        return p.center.Y() + p.Radius() * 0.5;\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'circle', 'area');\n    } else if (attr.measure === 'circumference' || attr.measure === 'perimeter') {\n      el = board.create('text', [function () {\n        return p.getLabelAnchor();\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'circle', 'perimeter');\n    }\n  } else if (p.type === Const.OBJECT_TYPE_POLYGON) {\n    if (attr.measure === 'area') {\n      el = board.create('text', [function () {\n        return p.getTextAnchor();\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'polygon', 'area');\n    } else if (attr.measure === 'perimeter') {\n      el = board.create('text', [function () {\n        var last = p.borders.length - 1;\n        if (last >= 0) {\n          return [(p.borders[last].point1.X() + p.borders[last].point2.X()) * 0.5, (p.borders[last].point1.Y() + p.borders[last].point2.Y()) * 0.5];\n        } else {\n          return p.getTextAnchor();\n        }\n      }, ''], attr);\n      txt_fun = getTextFun(el, p, 'polygon', 'perimeter');\n    }\n  } else if (p.type === Const.OBJECT_TYPE_ANGLE) {\n    el = board.create('text', [function () {\n      return p.getLabelAnchor();\n    }, ''], attr);\n    txt_fun = getTextFun(el, p, 'angle', attr.measure);\n  }\n  if (Type.exists(el)) {\n    el.setText(txt_fun);\n    p.addChild(el);\n    el.setParents([p]);\n  }\n  return el;\n};\nJXG.registerElement(\"smartlabel\", JXG.createSmartLabel);","map":{"version":3,"names":["JXG","Const","Type","createSmartLabel","board","parents","attributes","el","attr","p","user_supplied_text","getTextFun","txt_fun","length","OBJECT_CLASS_POINT","OBJECT_CLASS_LINE","OBJECT_CLASS_CIRCLE","indexOf","elementClass","OBJECT_TYPE_POLYGON","OBJECT_TYPE_ANGLE","type","Error","copyAttributes","options","rotate","Math","atan","getSlope","PI","visible","L","Radius","c1","center","coords","usrCoords","c2","getLabelAnchor","v","atan2","anchorX","elType","mType","measure","Slope","Area","Perimeter","Value","str","val","txt","evaluate","digits","visProp","u","unit","pre","prefix","suf","suffix","mj","usemathjax","usekatex","useLocale","formatNumberLocale","toFixed","join","create","X","Y","dir","x","y","point1","point2","getTextAnchor","last","borders","exists","setText","addChild","setParents","registerElement"],"sources":["D:/study things/web/weblab4-main/node_modules/jsxgraph/src/element/smartlabel.js"],"sourcesContent":["/*\n    Copyright 2008-2023\n        Matthias Ehmann,\n        Carsten Miller,\n        Alfred Wassermann\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true*/\n/*jslint nomen: true, plusplus: true*/\n\n/**\n * @fileoverview Implementation of smart labels..\n */\n\nimport JXG from \"../jxg\";\nimport Const from \"../base/constants\";\nimport Type from \"../utils/type\";\n\n/**\n * @class Smart label. These are customized text elements for displaying measurements of JSXGraph elements, like length of a\n * segment, perimeter or area of a circle or polygon (including polygonal chain), slope of a line, value of an angle, and coordinates of a point.\n * <p>\n * If additionally a text, or a function is supplied and the content is not the empty string,\n * that text is displayed instead of the measurement.\n * <p>\n * Smartlabels use custom made CSS layouts defined in jsxgraph.css. Therefore, the inclusion of the file jsxgraph.css is mandatory or\n * the CSS classes have to be replaced by other classes.\n * <p>\n * The default attributes for smartlabels are defined for each type of measured element in the following sub-objects.\n * This is a deviation from the usual JSXGraph attribute usage.\n * <ul>\n *  <li> <tt>JXG.Options.smartlabelangle</tt> for smartlabels of angle objects\n *  <li> <tt>JXG.Options.smartlabelcircle</tt> for smartlabels of circle objects\n *  <li> <tt>JXG.Options.smartlabelline</tt> for smartlabels of line objects\n *  <li> <tt>JXG.Options.smartlabelpoint</tt> for smartlabels of point objects.\n *  <li> <tt>JXG.Options.smartlabelpolygon</tt> for smartlabels of polygon objects.\n * </ul>\n *\n *\n * @pseudo\n * @name Smartlabel\n * @augments JXG.Text\n * @constructor\n * @type JXG.Text\n * @throws {Error} If the element cannot be constructed with the given parent objects an exception is thrown.\n * @param {JXG.GeometryElement} Parent parent object: point, line, circle, polygon, angle.\n * @param {String|Function} Txt Optional text. In case, this content is not the empty string,\n *  the measurement is overwritten by this text.\n *\n * @example\n * var p1 = board.create('point', [3, 4], {showInfobox: false, withLabel: false});\n * board.create('smartlabel', [p1], {digits: 1, unit: 'm', dir: 'col', useMathJax: false});\n *\n * </pre><div id=\"JXG30cd1f9e-7e78-48f3-91a2-9abd466a754f\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG30cd1f9e-7e78-48f3-91a2-9abd466a754f',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var p1 = board.create('point', [3, 4], {showInfobox: false, withLabel: false});\n *     board.create('smartlabel', [p1], {digits: 1, unit: 'cm', dir: 'col', useMathJax: false});\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var s1 = board.create('line', [[-7, 2], [6, -6]], {point1: {visible:true}, point2: {visible:true}});\n * board.create('smartlabel', [s1], {unit: 'm', measure: 'length', prefix: 'L = ', useMathJax: false});\n * board.create('smartlabel', [s1], {unit: 'm',  measure: 'slope', prefix: '&Delta; = ', useMathJax: false});\n *\n *\n * </pre><div id=\"JXGfb4423dc-ee3a-4122-a186-82123019a835\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXGfb4423dc-ee3a-4122-a186-82123019a835',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var s1 = board.create('line', [[-7, 2], [6, -6]], {point1: {visible:true}, point2: {visible:true}});\n *     board.create('smartlabel', [s1], {unit: 'm', measure: 'length', prefix: 'L = ', useMathJax: false});\n *     board.create('smartlabel', [s1], {unit: 'm',  measure: 'slope', prefix: '&Delta; = ', useMathJax: false});\n *\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var c1 = board.create('circle', [[0, 1], [4, 1]], {point2: {visible: true}});\n * board.create('smartlabel', [c1], {unit: 'm', measure: 'perimeter', prefix: 'U = ', useMathJax: false});\n * board.create('smartlabel', [c1], {unit: 'm', measure: 'area', prefix: 'A = ', useMathJax: false});\n * board.create('smartlabel', [c1], {unit: 'm', measure: 'radius', prefix: 'R = ', useMathJax: false});\n *\n *\n * </pre><div id=\"JXG763c4700-8273-4eb7-9ed9-1dc6c2c52e93\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG763c4700-8273-4eb7-9ed9-1dc6c2c52e93',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var c1 = board.create('circle', [[0, 1], [4, 1]], {point2: {visible: true}});\n *     board.create('smartlabel', [c1], {unit: 'm', measure: 'perimeter', prefix: 'U = ', useMathJax: false});\n *     board.create('smartlabel', [c1], {unit: 'm', measure: 'area', prefix: 'A = ', useMathJax: false});\n *     board.create('smartlabel', [c1], {unit: 'm', measure: 'radius', prefix: 'R = ', useMathJax: false});\n *\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var p2 = board.create('polygon', [[-6, -5], [7, -7], [-4, 3]], {});\n * board.create('smartlabel', [p2], {\n *     unit: 'm',\n *     measure: 'area',\n *     prefix: 'A = ',\n *     cssClass: 'smart-label-pure smart-label-polygon',\n *     highlightCssClass: 'smart-label-pure smart-label-polygon',\n *     useMathJax: false\n * });\n * board.create('smartlabel', [p2, () => 'X: ' + p2.vertices[0].X().toFixed(1)], {\n *     measure: 'perimeter',\n *     cssClass: 'smart-label-outline smart-label-polygon',\n *     highlightCssClass: 'smart-label-outline smart-label-polygon',\n *     useMathJax: false\n * });\n *\n * </pre><div id=\"JXG376425ac-b4e5-41f2-979c-6ff32a01e9c8\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG376425ac-b4e5-41f2-979c-6ff32a01e9c8',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var p2 = board.create('polygon', [[-6, -5], [7, -7], [-4, 3]], {});\n *     board.create('smartlabel', [p2], {\n *         unit: 'm',\n *         measure: 'area',\n *         prefix: 'A = ',\n *         cssClass: 'smart-label-pure smart-label-polygon',\n *         highlightCssClass: 'smart-label-pure smart-label-polygon',\n *         useMathJax: false\n *     });\n *     board.create('smartlabel', [p2, () => 'X: ' + p2.vertices[0].X().toFixed(1)], {\n *         measure: 'perimeter',\n *         cssClass: 'smart-label-outline smart-label-polygon',\n *         highlightCssClass: 'smart-label-outline smart-label-polygon',\n *         useMathJax: false\n *     });\n *\n *     })();\n *\n * </script><pre>\n *\n * @example\n * var a1 = board.create('angle', [[1, -1], [1, 2], [1, 5]], {name: '&beta;', withLabel: false});\n * var sma = board.create('smartlabel', [a1], {digits: 1, prefix: a1.name + '=', unit: '°', useMathJax: false});\n *\n * </pre><div id=\"JXG48d6d1ae-e04a-45f4-a743-273976712c0b\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG48d6d1ae-e04a-45f4-a743-273976712c0b',\n *             {boundingbox: [-8, 8, 8,-8], axis: true, showcopyright: false, shownavigation: false});\n *     var a1 = board.create('angle', [[1, -1], [1, 2], [1, 5]], {name: '&beta;', withLabel: false});\n *     var sma = board.create('smartlabel', [a1], {digits: 1, prefix: a1.name + '=', unit: '°', useMathJax: false});\n *\n *     })();\n *\n * </script><pre>\n *\n */\nJXG.createSmartLabel = function (board, parents, attributes) {\n    var el, attr,\n        p, user_supplied_text,\n        getTextFun, txt_fun;\n\n    if (parents.length === 0 || (\n        [Const.OBJECT_CLASS_POINT, Const.OBJECT_CLASS_LINE,Const.OBJECT_CLASS_CIRCLE].indexOf(parents[0].elementClass) < 0 &&\n        [Const.OBJECT_TYPE_POLYGON, Const.OBJECT_TYPE_ANGLE].indexOf(parents[0].type) < 0\n        )\n    ) {\n        throw new Error(\n            \"JSXGraph: Can't create smartlabel with parent types \" +\n                \"'\" + typeof parents[0] + \"', \" +\n                \"'\" + typeof parents[1] + \"'.\"\n        );\n    }\n\n    p = parents[0];\n    user_supplied_text = parents[1] || '';\n\n    if (p.elementClass === Const.OBJECT_CLASS_POINT) {\n        attr = Type.copyAttributes(attributes, board.options, 'smartlabelpoint');\n\n    } else if (p.elementClass === Const.OBJECT_CLASS_LINE) {\n        attr = Type.copyAttributes(attributes, board.options, 'smartlabelline');\n        /**\n         * @class\n         * @ignore\n         */\n        attr.rotate = function () { return Math.atan(p.getSlope()) * 180 / Math.PI; };\n        /**\n         * @class\n         * @ignore\n         */\n        attr.visible = function () { return (p.L() < 1.5) ? false : true; };\n\n    } else if (p.elementClass === Const.OBJECT_CLASS_CIRCLE) {\n        attr = Type.copyAttributes(attributes, board.options, 'smartlabelcircle');\n        /**\n         * @class\n         * @ignore\n         */\n        attr.visible = function () { return (p.Radius() < 1.5) ? false : true; };\n\n    } else if (p.type === Const.OBJECT_TYPE_POLYGON) {\n        attr = Type.copyAttributes(attributes, board.options, 'smartlabelpolygon');\n    } else if (p.type === Const.OBJECT_TYPE_ANGLE) {\n        attr = Type.copyAttributes(attributes, board.options, 'smartlabelangle');\n        /**\n         * @class\n         * @ignore\n         */\n        attr.rotate = function () {\n            var c1 = p.center.coords.usrCoords,\n                c2 = p.getLabelAnchor().usrCoords,\n                v = Math.atan2(c2[2] - c1[2], c2[1] - c1[1]) * 180 / Math.PI;\n            return (v > 90 && v < 270) ? v + 180 : v;\n        };\n        /**\n         * @class\n         * @ignore\n         */\n        attr.anchorX = function () {\n            var c1 = p.center.coords.usrCoords,\n                c2 = p.getLabelAnchor().usrCoords,\n                v = Math.atan2(c2[2] - c1[2], c2[1] - c1[1]) * 180 / Math.PI;\n            return (v > 90 && v < 270) ? 'right' : 'left';\n        };\n    }\n\n    getTextFun = function (el, p, elType, mType) {\n        var measure;\n        switch (mType) {\n            case 'length':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.L(); };\n                break;\n            case 'slope':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.Slope(); };\n                break;\n            case 'area':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.Area(); };\n                break;\n            case 'radius':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.Radius(); };\n                break;\n            case 'perimeter':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.Perimeter(); };\n                break;\n            case 'rad':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.Value(); };\n                break;\n            case 'deg':\n                /**\n                 * @ignore\n                 */\n                measure = function () { return p.Value() * 180 / Math.PI; };\n                break;\n            default:\n                /**\n                 * @ignore\n                 */\n                measure = function () { return 0.0; };\n        }\n\n        return function () {\n            var str = '',\n                val,\n                txt = Type.evaluate(user_supplied_text),\n                digits = Type.evaluate(el.visProp.digits),\n                u = Type.evaluate(el.visProp.unit),\n                pre = Type.evaluate(el.visProp.prefix),\n                suf = Type.evaluate(el.visProp.suffix),\n                mj = Type.evaluate(el.visProp.usemathjax) || Type.evaluate(el.visProp.usekatex);\n\n            if (txt === '') {\n                if (el.useLocale()) {\n                    val = el.formatNumberLocale(measure(), digits);\n                } else {\n                    val = Type.toFixed(measure(), digits);\n                }\n                if (mj) {\n                    str = ['\\\\(', pre, val, '\\\\,', u, suf, '\\\\)'].join('');\n                } else {\n                    str = [pre, val, u, suf].join('');\n                }\n            } else {\n                str = txt;\n            }\n            return str;\n        };\n    };\n\n    if (p.elementClass === Const.OBJECT_CLASS_POINT) {\n        el = board.create('text', [\n            function () { return p.X(); },\n            function () { return p.Y(); },\n            ''\n        ], attr);\n\n        txt_fun = function () {\n            var str = '',\n                txt = Type.evaluate(user_supplied_text),\n                digits = Type.evaluate(el.visProp.digits),\n                u = Type.evaluate(el.visProp.unit),\n                pre = Type.evaluate(el.visProp.prefix),\n                suf = Type.evaluate(el.visProp.suffix),\n                dir = Type.evaluate(el.visProp.dir),\n                mj = Type.evaluate(el.visProp.usemathjax) || Type.evaluate(el.visProp.usekatex),\n                x, y;\n\n            if (el.useLocale()) {\n                x = el.formatNumberLocale(p.X(), digits);\n                y = el.formatNumberLocale(p.Y(), digits);\n            } else {\n                x = Type.toFixed(p.X(), digits);\n                y = Type.toFixed(p.Y(), digits);\n            }\n\n            if (txt === '') {\n                if (dir === 'row') {\n                    if (mj) {\n                        str = ['\\\\(', pre, x, '\\\\,', u, ' / ', y, '\\\\,', u, suf, '\\\\)'].join('');\n                    } else {\n                        str = [pre, x, ' ', u, ' / ', y, ' ', u, suf].join('');\n                    }\n                } else if (dir.indexOf('col') === 0) { // Starts with 'col'\n                    if (mj) {\n                        str = ['\\\\(', pre, '\\\\left(\\\\array{', x, '\\\\,', u, '\\\\\\\\ ', y, '\\\\,', u, '}\\\\right)', suf, '\\\\)'].join('');\n                    } else {\n                        str = [pre, x, ' ', u, '<br/>', y, ' ', u, suf].join('');\n                    }\n                }\n            } else {\n                str = txt;\n            }\n            return str;\n        };\n\n    } else if (p.elementClass === Const.OBJECT_CLASS_LINE) {\n\n        if (attr.measure === 'length') {\n            el = board.create('text', [\n                function () { return (p.point1.X() + p.point2.X()) * 0.5; },\n                function () { return (p.point1.Y() + p.point2.Y()) * 0.5; },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'line', 'length');\n\n        } else if (attr.measure === 'slope') {\n            el = board.create('text', [\n                function () { return (p.point1.X() * 0.25 + p.point2.X() * 0.75); },\n                function () { return (p.point1.Y() * 0.25 + p.point2.Y() * 0.75); },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'line', 'slope');\n        }\n\n    } else if (p.elementClass === Const.OBJECT_CLASS_CIRCLE) {\n        if (attr.measure === 'radius') {\n            el = board.create('text', [\n                function () { return p.center.X() + p.Radius() * 0.5; },\n                function () { return p.center.Y(); },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'circle', 'radius');\n\n        } else if (attr.measure === 'area') {\n            el = board.create('text', [\n                function () { return p.center.X(); },\n                function () { return p.center.Y() + p.Radius() * 0.5; },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'circle', 'area');\n\n        } else if (attr.measure === 'circumference' || attr.measure === 'perimeter') {\n            el = board.create('text', [\n                function () { return p.getLabelAnchor(); },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'circle', 'perimeter');\n\n        }\n    } else if (p.type === Const.OBJECT_TYPE_POLYGON) {\n        if (attr.measure === 'area') {\n            el = board.create('text', [\n                function () { return p.getTextAnchor(); },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'polygon', 'area');\n\n        } else if (attr.measure === 'perimeter') {\n            el = board.create('text', [\n                function () {\n                    var last = p.borders.length - 1;\n                    if (last >= 0) {\n                        return [\n                            (p.borders[last].point1.X() + p.borders[last].point2.X()) * 0.5,\n                            (p.borders[last].point1.Y() + p.borders[last].point2.Y()) * 0.5\n                        ];\n                    } else {\n                        return p.getTextAnchor();\n                    }\n                },\n                ''\n            ], attr);\n            txt_fun = getTextFun(el, p, 'polygon', 'perimeter');\n        }\n\n    } else if (p.type === Const.OBJECT_TYPE_ANGLE) {\n        el = board.create('text', [\n            function () {\n                return p.getLabelAnchor();\n            },\n            ''\n        ], attr);\n        txt_fun = getTextFun(el, p, 'angle', attr.measure);\n    }\n\n    if (Type.exists(el)) {\n        el.setText(txt_fun);\n        p.addChild(el);\n        el.setParents([p]);\n    }\n\n    return el;\n};\n\nJXG.registerElement(\"smartlabel\", JXG.createSmartLabel);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}