{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as JXG from \"jsxgraph\";\nimport { PointRequestDto } from \"../../dto/point-request-dto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/point.service\";\nfunction PointGraphComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Error: \", ctx_r0.errorMessage, \"\\n\");\n  }\n}\nexport class PointGraphComponent {\n  constructor(service) {\n    this.service = service;\n    this.points = [];\n    this.figures = [];\n    this.dr_points = [];\n    this.r = -1000;\n    this.errorMessage = \"\";\n    this.addEvent = new EventEmitter();\n  }\n  ngOnInit() {\n    this.r = -1000;\n    this.service.getPoints().subscribe(data => {\n      this.points = data;\n    });\n    this.board = JXG.JSXGraph.initBoard('jxgbox', {\n      boundingbox: [-5, 5, 5, -5],\n      axis: true,\n      showCopyright: false\n    });\n    // this.initFigures(3);\n  }\n  onClick(e) {\n    // @ts-ignore\n    if (e.button === 2 || e.target.className === 'JXG_navigation_button') {\n      return;\n    }\n    if (this.r != -1000) {\n      let coords = this.board.getUsrCoordsOfMouse(event);\n      let x = coords[0].toFixed(2);\n      let y = coords[1].toFixed(2);\n      let r = this.r;\n      console.log(x + \" \" + y + \" \" + r);\n      let point = new PointRequestDto(+x, +y, r);\n      this.savePoint(point);\n    } else {\n      this.errorMessage = \"You have to choose R\";\n    }\n  }\n  addPoint(point) {\n    this.points.push(point);\n    this.refresh(point.r);\n  }\n  savePoint(point) {\n    this.service.savePoint(point).subscribe(data => {\n      console.log(\"New point \" + data.currentTime);\n      this.addEvent.emit(data);\n      this.addPoint(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n  refresh(r) {\n    this.r = r;\n    this.errorMessage = '';\n    console.log(\"Graph: \" + r);\n    this.clearBoard();\n    this.drawFigures(r);\n    this.drawPoints(r);\n  }\n  drawPoints(r) {\n    for (const point of this.points) {\n      if (point.r == r) {\n        this.dr_points.push(this.createPoint(point));\n      }\n    }\n  }\n  drawFigures(r) {\n    this.figures.push(this.createRectangle(r));\n    this.figures.push(this.createTriangle(r));\n    this.figures.push(this.createCircle(r));\n  }\n  createPoint(point) {\n    let color = point.hit ? \"#7ce57c\" : \"#dc4a4a\";\n    return this.board.create(\"point\", [point.x, point.y], {\n      name: '',\n      fixed: true,\n      fillColor: color,\n      fillOpacity: 1,\n      strokewidth: 0\n    });\n  }\n  createRectangle(r) {\n    let rectanglePoint1 = this.board.create('point', [0, 0], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let rectanglePoint2 = this.board.create('point', [r, 0], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let rectanglePoint3 = this.board.create('point', [r, -r / 2], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let rectanglePoint4 = this.board.create('point', [0, -r / 2], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    return this.board.create('polygon', [rectanglePoint1, rectanglePoint2, rectanglePoint3, rectanglePoint4], {\n      fillColor: 'rgba(18,54,234,0.92)',\n      fillOpacity: 1\n    });\n  }\n  createTriangle(r) {\n    let trianglePoint1 = this.board.create('point', [0, 0], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let trianglePoint2 = this.board.create('point', [-r / 2, 0], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let trianglePoint3 = this.board.create('point', [0, r / 2], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    return this.board.create('polygon', [trianglePoint1, trianglePoint2, trianglePoint3], {\n      fillColor: 'rgba(18,54,234,0.92)',\n      fillOpacity: 1\n    });\n  }\n  createCircle(r) {\n    let circlePoint1 = this.board.create('point', [-r / 2, 0], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let circlePoint2 = this.board.create('point', [0, -r / 2], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    let centerPoint = this.board.create('point', [0, 0], {\n      name: '',\n      fixed: true,\n      visible: false\n    });\n    return this.board.create('sector', [centerPoint, circlePoint1, circlePoint2], {\n      fillColor: 'rgba(18,54,234,0.92)',\n      fillOpacity: 1\n    });\n  }\n  clearBoard() {\n    for (const object of this.figures) {\n      this.board.removeObject(object);\n    }\n    for (const point of this.dr_points) {\n      this.board.removeObject(point);\n    }\n  }\n  static #_ = this.ɵfac = function PointGraphComponent_Factory(t) {\n    return new (t || PointGraphComponent)(i0.ɵɵdirectiveInject(i1.PointService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PointGraphComponent,\n    selectors: [[\"app-point-graph\"]],\n    outputs: {\n      addEvent: \"addEvent\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"jxgbox\", 1, \"m-auto\", \"border-2\", 2, \"height\", \"300px\", \"width\", \"300px\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n    template: function PointGraphComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function PointGraphComponent_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(1, PointGraphComponent_div_1_Template, 2, 1, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage != \"\");\n      }\n    },\n    styles: [\"#jxgbox[_ngcontent-%COMP%]{\\n  border-radius: 15px;\\n  background-color: #d5d5d5;\\n  margin: 5%;\\n  border-color: rgba(224, 0, 253, 0.92);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L3BvaW50LWdyYXBoL3BvaW50LWdyYXBoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLFVBQVU7RUFDVixxQ0FBcUM7QUFDdkMiLCJzb3VyY2VzQ29udGVudCI6WyIjanhnYm94e1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDVkNWQ1O1xuICBtYXJnaW46IDUlO1xuICBib3JkZXItY29sb3I6IHJnYmEoMjI0LCAwLCAyNTMsIDAuOTIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","JXG","PointRequestDto","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","PointGraphComponent","constructor","service","points","figures","dr_points","r","addEvent","ngOnInit","getPoints","subscribe","data","board","JSXGraph","initBoard","boundingbox","axis","showCopyright","onClick","e","button","target","className","coords","getUsrCoordsOfMouse","event","x","toFixed","y","console","log","point","savePoint","addPoint","push","refresh","currentTime","emit","error","clearBoard","drawFigures","drawPoints","createPoint","createRectangle","createTriangle","createCircle","color","hit","create","name","fixed","fillColor","fillOpacity","strokewidth","rectanglePoint1","visible","rectanglePoint2","rectanglePoint3","rectanglePoint4","trianglePoint1","trianglePoint2","trianglePoint3","circlePoint1","circlePoint2","centerPoint","object","removeObject","_","ɵɵdirectiveInject","i1","PointService","_2","selectors","outputs","decls","vars","consts","template","PointGraphComponent_Template","rf","ctx","ɵɵlistener","PointGraphComponent_Template_div_click_0_listener","$event","ɵɵtemplate","PointGraphComponent_div_1_Template","ɵɵproperty"],"sources":["D:\\study things\\web\\weblab4-main\\frontend\\src\\app\\component\\point-graph\\point-graph.component.ts","D:\\study things\\web\\weblab4-main\\frontend\\src\\app\\component\\point-graph\\point-graph.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport * as JXG from \"jsxgraph\";\nimport {PointResponse} from \"../../dto/point-response\";\nimport {GeometryElement} from \"jsxgraph\";\nimport {PointService} from \"../../service/point.service\";\nimport {PointRequestDto} from \"../../dto/point-request-dto\";\n\n@Component({\n  selector: 'app-point-graph',\n  templateUrl: './point-graph.component.html',\n  styleUrls: ['./point-graph.component.css']\n})\nexport class PointGraphComponent implements OnInit {\n  points: PointResponse[] = [];\n\n  board!: JXG.Board\n\n  figures: GeometryElement[] = [];\n  dr_points: GeometryElement[] = [];\n\n  r: number = -1000;\n\n  errorMessage: string = \"\";\n\n  @Output() addEvent = new EventEmitter<PointResponse>();\n\n  constructor(private service: PointService) {\n  }\n\n  ngOnInit() {\n    this.r = -1000\n    this.service.getPoints().subscribe(data => {\n      this.points = data;\n    })\n    this.board = JXG.JSXGraph.initBoard('jxgbox', {boundingbox: [-5, 5, 5, -5], axis: true, showCopyright: false});\n    // this.initFigures(3);\n  }\n\n  onClick(e: MouseEvent) {\n    // @ts-ignore\n    if (e.button === 2 || e.target.className === 'JXG_navigation_button') {\n      return;\n    }\n\n    if (this.r != -1000) {\n      let coords = this.board.getUsrCoordsOfMouse(event);\n      let x = coords[0].toFixed(2);\n      let y = coords[1].toFixed(2);\n      let r = this.r\n      console.log(x + \" \" + y + \" \" + r);\n\n      let point = new PointRequestDto(+x, +y, r);\n      this.savePoint(point)\n    } else {\n      this.errorMessage = \"You have to choose R\"\n    }\n  }\n\n  addPoint(point: PointResponse) {\n    this.points.push(point);\n    this.refresh(point.r);\n  }\n\n  savePoint(point: PointRequestDto) {\n    this.service.savePoint(point).subscribe(\n      data => {\n        console.log(\"New point \" + data.currentTime);\n        this.addEvent.emit(data);\n        this.addPoint(data);\n      },\n\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  refresh(r: number) {\n    this.r = r;\n    this.errorMessage = ''\n    console.log(\"Graph: \" + r);\n    this.clearBoard();\n    this.drawFigures(r);\n    this.drawPoints(r);\n  }\n\n  drawPoints(r: number) {\n    for (const point of this.points) {\n      if (point.r == r) {\n        this.dr_points.push(<GeometryElement>this.createPoint(point));\n      }\n\n    }\n  }\n\n  drawFigures(r: number) {\n    this.figures.push(this.createRectangle(r));\n    this.figures.push(this.createTriangle(r));\n    this.figures.push(this.createCircle(r));\n  }\n\n  createPoint(point: PointResponse) {\n    let color = (point.hit ? \"#7ce57c\" : \"#dc4a4a\");\n    return this.board.create(\"point\", [point.x, point.y], {\n      name: '', fixed: true, fillColor: color, fillOpacity: 1,\n      strokewidth: 0\n    });\n\n  }\n\n  createRectangle(r: number) {\n    let rectanglePoint1 = this.board.create('point', [0, 0], {name: '', fixed: true, visible: false});\n    let rectanglePoint2 = this.board.create('point', [r, 0], {name: '', fixed: true, visible: false});\n    let rectanglePoint3 = this.board.create('point', [r, -r / 2], {name: '', fixed: true, visible: false});\n    let rectanglePoint4 = this.board.create('point', [0, -r / 2], {name: '', fixed: true, visible: false});\n    return this.board.create('polygon', [rectanglePoint1, rectanglePoint2, rectanglePoint3, rectanglePoint4],\n      {fillColor: 'rgba(18,54,234,0.92)', fillOpacity: 1});\n  }\n\n  createTriangle(r: number) {\n    let trianglePoint1 = this.board.create('point', [0, 0], {name: '', fixed: true, visible: false});\n    let trianglePoint2 = this.board.create('point', [-r / 2, 0], {name: '', fixed: true, visible: false});\n    let trianglePoint3 = this.board.create('point', [0, r / 2], {name: '', fixed: true, visible: false});\n    return this.board.create('polygon', [trianglePoint1, trianglePoint2, trianglePoint3], {\n      fillColor: 'rgba(18,54,234,0.92)',\n      fillOpacity: 1\n    });\n  }\n\n  createCircle(r: number) {\n    let circlePoint1 = this.board.create('point', [-r / 2, 0], {name: '', fixed: true, visible: false});\n    let circlePoint2 = this.board.create('point', [0, -r / 2], {name: '', fixed: true, visible: false});\n    let centerPoint = this.board.create('point', [0, 0], {name: '', fixed: true, visible: false});\n\n    return this.board.create('sector', [centerPoint, circlePoint1, circlePoint2],\n      {fillColor: 'rgba(18,54,234,0.92)', fillOpacity: 1});\n  }\n\n  clearBoard() {\n    for (const object of this.figures) {\n      this.board.removeObject(object);\n    }\n\n    for (const point of this.dr_points) {\n      this.board.removeObject(point);\n    }\n  }\n\n}\n","<div id=\"jxgbox\" class=\"m-auto border-2\" style=\"height: 300px; width: 300px;\" (click)=\"onClick($event)\"></div>\n<div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\">\n  Error: {{errorMessage}}\n</div>\n"],"mappings":"AAAA,SAAmBA,YAAY,QAAwD,eAAe;AACtG,OAAO,KAAKC,GAAG,MAAM,UAAU;AAI/B,SAAQC,eAAe,QAAO,6BAA6B;;;;;ICJ3DC,EAAA,CAAAC,cAAA,aAAyD;IACvDD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,EACF;IADEJ,EAAA,CAAAK,kBAAA,aAAAC,MAAA,CAAAC,YAAA,OACF;;;ADSA,OAAM,MAAOC,mBAAmB;EAc9BC,YAAoBC,OAAqB;IAArB,KAAAA,OAAO,GAAPA,OAAO;IAb3B,KAAAC,MAAM,GAAoB,EAAE;IAI5B,KAAAC,OAAO,GAAsB,EAAE;IAC/B,KAAAC,SAAS,GAAsB,EAAE;IAEjC,KAAAC,CAAC,GAAW,CAAC,IAAI;IAEjB,KAAAP,YAAY,GAAW,EAAE;IAEf,KAAAQ,QAAQ,GAAG,IAAIlB,YAAY,EAAiB;EAGtD;EAEAmB,QAAQA,CAAA;IACN,IAAI,CAACF,CAAC,GAAG,CAAC,IAAI;IACd,IAAI,CAACJ,OAAO,CAACO,SAAS,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACxC,IAAI,CAACR,MAAM,GAAGQ,IAAI;IACpB,CAAC,CAAC;IACF,IAAI,CAACC,KAAK,GAAGtB,GAAG,CAACuB,QAAQ,CAACC,SAAS,CAAC,QAAQ,EAAE;MAACC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAK,CAAC,CAAC;IAC9G;EACF;EAEAC,OAAOA,CAACC,CAAa;IACnB;IACA,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,IAAID,CAAC,CAACE,MAAM,CAACC,SAAS,KAAK,uBAAuB,EAAE;MACpE;IACF;IAEA,IAAI,IAAI,CAAChB,CAAC,IAAI,CAAC,IAAI,EAAE;MACnB,IAAIiB,MAAM,GAAG,IAAI,CAACX,KAAK,CAACY,mBAAmB,CAACC,KAAK,CAAC;MAClD,IAAIC,CAAC,GAAGH,MAAM,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;MAC5B,IAAIC,CAAC,GAAGL,MAAM,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;MAC5B,IAAIrB,CAAC,GAAG,IAAI,CAACA,CAAC;MACduB,OAAO,CAACC,GAAG,CAACJ,CAAC,GAAG,GAAG,GAAGE,CAAC,GAAG,GAAG,GAAGtB,CAAC,CAAC;MAElC,IAAIyB,KAAK,GAAG,IAAIxC,eAAe,CAAC,CAACmC,CAAC,EAAE,CAACE,CAAC,EAAEtB,CAAC,CAAC;MAC1C,IAAI,CAAC0B,SAAS,CAACD,KAAK,CAAC;IACvB,CAAC,MAAM;MACL,IAAI,CAAChC,YAAY,GAAG,sBAAsB;IAC5C;EACF;EAEAkC,QAAQA,CAACF,KAAoB;IAC3B,IAAI,CAAC5B,MAAM,CAAC+B,IAAI,CAACH,KAAK,CAAC;IACvB,IAAI,CAACI,OAAO,CAACJ,KAAK,CAACzB,CAAC,CAAC;EACvB;EAEA0B,SAASA,CAACD,KAAsB;IAC9B,IAAI,CAAC7B,OAAO,CAAC8B,SAAS,CAACD,KAAK,CAAC,CAACrB,SAAS,CACrCC,IAAI,IAAG;MACLkB,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGnB,IAAI,CAACyB,WAAW,CAAC;MAC5C,IAAI,CAAC7B,QAAQ,CAAC8B,IAAI,CAAC1B,IAAI,CAAC;MACxB,IAAI,CAACsB,QAAQ,CAACtB,IAAI,CAAC;IACrB,CAAC,EAED2B,KAAK,IAAG;MACNT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAH,OAAOA,CAAC7B,CAAS;IACf,IAAI,CAACA,CAAC,GAAGA,CAAC;IACV,IAAI,CAACP,YAAY,GAAG,EAAE;IACtB8B,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGxB,CAAC,CAAC;IAC1B,IAAI,CAACiC,UAAU,EAAE;IACjB,IAAI,CAACC,WAAW,CAAClC,CAAC,CAAC;IACnB,IAAI,CAACmC,UAAU,CAACnC,CAAC,CAAC;EACpB;EAEAmC,UAAUA,CAACnC,CAAS;IAClB,KAAK,MAAMyB,KAAK,IAAI,IAAI,CAAC5B,MAAM,EAAE;MAC/B,IAAI4B,KAAK,CAACzB,CAAC,IAAIA,CAAC,EAAE;QAChB,IAAI,CAACD,SAAS,CAAC6B,IAAI,CAAkB,IAAI,CAACQ,WAAW,CAACX,KAAK,CAAC,CAAC;MAC/D;IAEF;EACF;EAEAS,WAAWA,CAAClC,CAAS;IACnB,IAAI,CAACF,OAAO,CAAC8B,IAAI,CAAC,IAAI,CAACS,eAAe,CAACrC,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACF,OAAO,CAAC8B,IAAI,CAAC,IAAI,CAACU,cAAc,CAACtC,CAAC,CAAC,CAAC;IACzC,IAAI,CAACF,OAAO,CAAC8B,IAAI,CAAC,IAAI,CAACW,YAAY,CAACvC,CAAC,CAAC,CAAC;EACzC;EAEAoC,WAAWA,CAACX,KAAoB;IAC9B,IAAIe,KAAK,GAAIf,KAAK,CAACgB,GAAG,GAAG,SAAS,GAAG,SAAU;IAC/C,OAAO,IAAI,CAACnC,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAACjB,KAAK,CAACL,CAAC,EAAEK,KAAK,CAACH,CAAC,CAAC,EAAE;MACpDqB,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEC,SAAS,EAAEL,KAAK;MAAEM,WAAW,EAAE,CAAC;MACvDC,WAAW,EAAE;KACd,CAAC;EAEJ;EAEAV,eAAeA,CAACrC,CAAS;IACvB,IAAIgD,eAAe,GAAG,IAAI,CAAC1C,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAACC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACjG,IAAIC,eAAe,GAAG,IAAI,CAAC5C,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC1C,CAAC,EAAE,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACjG,IAAIE,eAAe,GAAG,IAAI,CAAC7C,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC1C,CAAC,EAAE,CAACA,CAAC,GAAG,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACtG,IAAIG,eAAe,GAAG,IAAI,CAAC9C,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC1C,CAAC,GAAG,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACtG,OAAO,IAAI,CAAC3C,KAAK,CAACoC,MAAM,CAAC,SAAS,EAAE,CAACM,eAAe,EAAEE,eAAe,EAAEC,eAAe,EAAEC,eAAe,CAAC,EACtG;MAACP,SAAS,EAAE,sBAAsB;MAAEC,WAAW,EAAE;IAAC,CAAC,CAAC;EACxD;EAEAR,cAAcA,CAACtC,CAAS;IACtB,IAAIqD,cAAc,GAAG,IAAI,CAAC/C,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAACC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IAChG,IAAIK,cAAc,GAAG,IAAI,CAAChD,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC1C,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACrG,IAAIM,cAAc,GAAG,IAAI,CAACjD,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE1C,CAAC,GAAG,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACpG,OAAO,IAAI,CAAC3C,KAAK,CAACoC,MAAM,CAAC,SAAS,EAAE,CAACW,cAAc,EAAEC,cAAc,EAAEC,cAAc,CAAC,EAAE;MACpFV,SAAS,EAAE,sBAAsB;MACjCC,WAAW,EAAE;KACd,CAAC;EACJ;EAEAP,YAAYA,CAACvC,CAAS;IACpB,IAAIwD,YAAY,GAAG,IAAI,CAAClD,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC1C,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACnG,IAAIQ,YAAY,GAAG,IAAI,CAACnD,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC1C,CAAC,GAAG,CAAC,CAAC,EAAE;MAAC2C,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACnG,IAAIS,WAAW,GAAG,IAAI,CAACpD,KAAK,CAACoC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAACC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IAE7F,OAAO,IAAI,CAAC3C,KAAK,CAACoC,MAAM,CAAC,QAAQ,EAAE,CAACgB,WAAW,EAAEF,YAAY,EAAEC,YAAY,CAAC,EAC1E;MAACZ,SAAS,EAAE,sBAAsB;MAAEC,WAAW,EAAE;IAAC,CAAC,CAAC;EACxD;EAEAb,UAAUA,CAAA;IACR,KAAK,MAAM0B,MAAM,IAAI,IAAI,CAAC7D,OAAO,EAAE;MACjC,IAAI,CAACQ,KAAK,CAACsD,YAAY,CAACD,MAAM,CAAC;IACjC;IAEA,KAAK,MAAMlC,KAAK,IAAI,IAAI,CAAC1B,SAAS,EAAE;MAClC,IAAI,CAACO,KAAK,CAACsD,YAAY,CAACnC,KAAK,CAAC;IAChC;EACF;EAAC,QAAAoC,CAAA,G;qBAtIUnE,mBAAmB,EAAAR,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBvE,mBAAmB;IAAAwE,SAAA;IAAAC,OAAA;MAAAlE,QAAA;IAAA;IAAAmE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZhCvF,EAAA,CAAAC,cAAA,aAAwG;QAA1BD,EAAA,CAAAyF,UAAA,mBAAAC,kDAAAC,MAAA;UAAA,OAASH,GAAA,CAAA9D,OAAA,CAAAiE,MAAA,CAAe;QAAA,EAAC;QAAC3F,EAAA,CAAAG,YAAA,EAAM;QAC9GH,EAAA,CAAA4F,UAAA,IAAAC,kCAAA,iBAEM;;;QAFA7F,EAAA,CAAAI,SAAA,EAAsB;QAAtBJ,EAAA,CAAA8F,UAAA,SAAAN,GAAA,CAAAjF,YAAA,OAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}