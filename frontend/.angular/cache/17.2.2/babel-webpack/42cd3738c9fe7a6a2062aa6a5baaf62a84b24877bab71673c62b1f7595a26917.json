{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { PointRequestDto } from \"../../dto/point-request-dto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/point.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/multiselect\";\nimport * as i5 from \"primeng/slider\";\nfunction PointFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class PointFormComponent {\n  constructor(pointService, formBuilder) {\n    this.pointService = pointService;\n    this.formBuilder = formBuilder;\n    this.pointForm = this.formBuilder.group({\n      x_value: '',\n      y_value: '',\n      r_value: ''\n    });\n    this.addEvent = new EventEmitter();\n    this.rChangeEvent = new EventEmitter();\n    this.errorMessage = \"\";\n    this.x_values = [-5, -4, -3, -2, -1, 0, 1, 2, 3];\n    this.r_values = [-5, -4, -3, -2, -1, 0, 1, 2, 3];\n  }\n  onSubmit() {\n    this.errorMessage = \"\";\n    if (this.pointForm.value.x_value === '' || this.pointForm.value.x_value == null) {\n      this.errorMessage = \"X value is required\";\n    } else if (this.pointForm.value.y_value === '' || this.pointForm.value.y_value == null) {\n      this.errorMessage = \"Y value is required\";\n    } else if (this.pointForm.value.r_value === '' || this.pointForm.value.r_value == null) {\n      this.errorMessage = \"R value is required\";\n    } else {\n      console.log('Form data: ', this.pointForm.value);\n      for (let i = 0; i < this.pointForm.value.x_value.length; i++) {\n        for (let j = 0; j < this.pointForm.value.r_value.length; j++) {\n          let point = new PointRequestDto(+this.pointForm.value.x_value[i], +this.pointForm.value.y_value, +this.pointForm.value.r_value[j]);\n          this.pointService.savePoint(point).subscribe(data => {\n            console.log(\"New point \" + data.currentTime);\n            this.addEvent.emit(data);\n          }, error => {\n            console.log(error);\n          });\n        }\n      }\n    }\n  }\n  onChangeR(event) {\n    const selectedValues = event.value; // Получаем выбранные значения\n    if (selectedValues && selectedValues.length > 0) {\n      const selectedValue = selectedValues[selectedValues.length - 1]; // Берём последнее выбранное значение\n      console.log(selectedValue); // Здесь можно добавить любую логику с выбранным значением\n      this.rChangeEvent.emit(selectedValue);\n    }\n  }\n  static #_ = this.ɵfac = function PointFormComponent_Factory(t) {\n    return new (t || PointFormComponent)(i0.ɵɵdirectiveInject(i1.PointService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PointFormComponent,\n    selectors: [[\"app-point-form\"]],\n    outputs: {\n      addEvent: \"addEvent\",\n      rChangeEvent: \"rChangeEvent\"\n    },\n    decls: 18,\n    vars: 9,\n    consts: [[1, \"card\", \"bg-dark\", \"m-auto\", 2, \"max-width\", \"65%\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\", 2, \"background-color\", \"#d5d5d5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"id\", \"x_value\", \"formControlName\", \"x_value\", \"placeholder\", \"Choose X value\", \"appendTo\", \"body\", 3, \"options\"], [\"for\", \"y_value\"], [\"id\", \"y_value\", \"formControlName\", \"y_value\", 1, \"w-full\", 3, \"min\", \"max\", \"step\", \"ngModel\", \"ngModelChange\"], [\"id\", \"r_value\", \"formControlName\", \"r_value\", \"placeholder\", \"Choose R value\", \"appendTo\", \"body\", 3, \"options\", \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger\", \"style\", \"margin-top: 10px;\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", 2, \"margin-top\", \"10px\"]],\n    template: function PointFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Add new point\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function PointFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"p-multiSelect\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p-slider\", 7);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function PointFormComponent_Template_p_slider_ngModelChange_10_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.y_values, $event) || (ctx.y_values = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"p-multiSelect\", 8);\n        i0.ɵɵlistener(\"change\", function PointFormComponent_Template_p_multiSelect_change_13_listener($event) {\n          return ctx.onChangeR($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵtext(16, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, PointFormComponent_div_17_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.pointForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"options\", ctx.x_values);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Choose Y value: \", ctx.y_values, \"\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"min\", -3)(\"max\", 5)(\"step\", 1);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.y_values);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"options\", ctx.r_values);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage != \"\");\n      }\n    },\n    dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.MultiSelect, i5.Slider],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","PointRequestDto","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","PointFormComponent","constructor","pointService","formBuilder","pointForm","group","x_value","y_value","r_value","addEvent","rChangeEvent","x_values","r_values","onSubmit","value","console","log","i","length","j","point","savePoint","subscribe","data","currentTime","emit","error","onChangeR","event","selectedValues","selectedValue","_","ɵɵdirectiveInject","i1","PointService","i2","FormBuilder","_2","selectors","outputs","decls","vars","consts","template","PointFormComponent_Template","rf","ctx","ɵɵlistener","PointFormComponent_Template_form_ngSubmit_4_listener","ɵɵelement","ɵɵtwoWayListener","PointFormComponent_Template_p_slider_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","y_values","PointFormComponent_Template_p_multiSelect_change_13_listener","ɵɵtemplate","PointFormComponent_div_17_Template","ɵɵproperty","ɵɵtwoWayProperty"],"sources":["D:\\study things\\web\\weblab4-main\\frontend\\src\\app\\component\\point-form\\point-form.component.ts","D:\\study things\\web\\weblab4-main\\frontend\\src\\app\\component\\point-form\\point-form.component.html"],"sourcesContent":["import {Component, EventEmitter, Output, ViewChild} from '@angular/core';\nimport {PointService} from \"../../service/point.service\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {PointRequestDto} from \"../../dto/point-request-dto\";\nimport {PointResponse} from \"../../dto/point-response\";\nimport { MultiSelectModule } from 'primeng/multiselect';\n@Component({\n  selector: 'app-point-form',\n  templateUrl: './point-form.component.html',\n  styleUrls: ['./point-form.component.css']\n})\nexport class PointFormComponent {\n\n  pointForm = this.formBuilder.group({\n    x_value: '',\n    y_value: '',\n    r_value: ''\n  });\n\n\n  @Output() addEvent = new EventEmitter<PointResponse>();\n  @Output() rChangeEvent = new EventEmitter<number>()\n  errorMessage: string = \"\";\n\n\n  x_values: number[] = [-5, -4, -3, -2, -1, 0, 1, 2, 3];\n  r_values: number[] = [-5, -4, -3, -2, -1, 0, 1, 2, 3];\n  y_values: any;\n\n  constructor(private pointService: PointService,\n              private formBuilder: FormBuilder) {\n  }\n\n  onSubmit(): void {\n    this.errorMessage = \"\";\n\n    if (this.pointForm.value.x_value === '' || this.pointForm.value.x_value == null) {\n      this.errorMessage = \"X value is required\";\n    } else if (this.pointForm.value.y_value === '' || this.pointForm.value.y_value == null) {\n      this.errorMessage = \"Y value is required\";\n    } else if (this.pointForm.value.r_value === '' || this.pointForm.value.r_value == null) {\n      this.errorMessage = \"R value is required\";\n    } else {\n\n      console.log('Form data: ', this.pointForm.value);\n      for (let i= 0; i < this.pointForm.value.x_value.length; i++) {\n        for (let j = 0; j < this.pointForm.value.r_value.length; j++) {\n          let point = new PointRequestDto(\n            +this.pointForm.value.x_value[i],\n            +this.pointForm.value.y_value,\n            +this.pointForm.value.r_value[j],\n          );\n\n          this.pointService.savePoint(point).subscribe(\n            data => {\n              console.log(\"New point \" + data.currentTime);\n              this.addEvent.emit(data);\n            },\n\n            error => {\n              console.log(error);\n            }\n          );\n        }\n      }\n\n\n    }\n\n  }\n\n  onChangeR(event: any):void{\n    const selectedValues = event.value; // Получаем выбранные значения\n    if (selectedValues && selectedValues.length > 0) {\n      const selectedValue = selectedValues[selectedValues.length - 1]; // Берём последнее выбранное значение\n      console.log(selectedValue); // Здесь можно добавить любую логику с выбранным значением\n      this.rChangeEvent.emit(selectedValue);\n    }\n\n  }\n\n}\n","<div class=\"card bg-dark m-auto\" style=\"max-width: 65%\">\n  <div class=\"card-header text-center\">Add new point</div>\n  <div class=\"card-body\" style=\"background-color: #d5d5d5\">\n    <form [formGroup]=\"pointForm\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"form-group\">\n        <p-multiSelect id=\"x_value\" formControlName=\"x_value\" [options]=\"x_values\" placeholder=\"Choose X value\"\n                         appendTo=\"body\"></p-multiSelect>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"y_value\">Choose Y value: {{ y_values }}</label>\n        <p-slider id=\"y_value\" formControlName=\"y_value\" [min]=\"-3\" [max]=\"5\" [step]=\"1\" class=\"w-full\" [(ngModel)]=\"y_values\"></p-slider>\n      </div>\n      <br>\n      <div class=\"form-group\">\n        <p-multiSelect id=\"r_value\" formControlName=\"r_value\" [options]=\"r_values\" placeholder=\"Choose R value\"\n                       appendTo=\"body\" (change)=\"onChangeR($event)\"></p-multiSelect>\n      </div>\n      <br>\n\n      <button class=\"btn btn-primary\" type=\"submit\">\n        Submit\n      </button>\n\n      <div *ngIf=\"errorMessage!=''\" class=\"alert alert-danger\" style=\"margin-top: 10px;\">\n        {{errorMessage}}\n      </div>\n\n    </form>\n  </div>\n\n\n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}