{"ast":null,"code":"/*\n    Copyright 2008-2023\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true, AMprocessNode: true, MathJax: true, document: true */\n/*jslint nomen: true, plusplus: true, newcap:true*/\n\nimport JXG from \"../jxg\";\nimport AbstractRenderer from \"./abstract\";\nimport Const from \"../base/constants\";\nimport Type from \"../utils/type\";\nimport Color from \"../utils/color\";\nimport Mat from \"../math/math\";\nimport Numerics from \"../math/numerics\";\n\n/**\n * Uses VML to implement the rendering methods defined in {@link JXG.AbstractRenderer}.\n * VML was used in very old Internet Explorer versions upto IE 8.\n *\n *\n * @class JXG.VMLRenderer\n * @augments JXG.AbstractRenderer\n * @param {Node} container Reference to a DOM node containing the board.\n * @see JXG.AbstractRenderer\n * @deprecated\n */\nJXG.VMLRenderer = function (container) {\n  this.type = \"vml\";\n  this.container = container;\n  this.container.style.overflow = \"hidden\";\n  if (this.container.style.position === \"\") {\n    this.container.style.position = \"relative\";\n  }\n  this.container.onselectstart = function () {\n    return false;\n  };\n  this.resolution = 10; // Paths are drawn with a resolution of this.resolution/pixel.\n\n  // Add VML includes and namespace\n  // Original: IE <=7\n  //container.ownerDocument.createStyleSheet().addRule(\"v\\\\:*\", \"behavior: url(#default#VML);\");\n  if (!Type.exists(JXG.vmlStylesheet)) {\n    container.ownerDocument.namespaces.add(\"jxgvml\", \"urn:schemas-microsoft-com:vml\");\n    JXG.vmlStylesheet = this.container.ownerDocument.createStyleSheet();\n    JXG.vmlStylesheet.addRule(\".jxgvml\", \"behavior:url(#default#VML)\");\n  }\n  try {\n    if (!container.ownerDocument.namespaces.jxgvml) {\n      container.ownerDocument.namespaces.add(\"jxgvml\", \"urn:schemas-microsoft-com:vml\");\n    }\n    this.createNode = function (tagName) {\n      return container.ownerDocument.createElement(\"<jxgvml:\" + tagName + ' class=\"jxgvml\">');\n    };\n  } catch (e) {\n    this.createNode = function (tagName) {\n      return container.ownerDocument.createElement(\"<\" + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"jxgvml\">');\n    };\n  }\n\n  // dash styles\n  this.dashArray = [\"Solid\", \"1 1\", \"ShortDash\", \"Dash\", \"LongDash\", \"ShortDashDot\", \"LongDashDot\"];\n};\nJXG.VMLRenderer.prototype = new AbstractRenderer();\nJXG.extend(JXG.VMLRenderer.prototype, /** @lends JXG.VMLRenderer.prototype */{\n  /**\n   * Sets attribute <tt>key</tt> of node <tt>node</tt> to <tt>value</tt>.\n   * @param {Node} node A DOM node.\n   * @param {String} key Name of the attribute.\n   * @param {String} val New value of the attribute.\n   * @param {Boolean} [iFlag=false] If false, the attribute's name is case insensitive.\n   */\n  _setAttr: function (node, key, val, iFlag) {\n    try {\n      if (this.container.ownerDocument.documentMode === 8) {\n        node[key] = val;\n      } else {\n        node.setAttribute(key, val, iFlag);\n      }\n    } catch (e) {\n      JXG.debug(\"_setAttr:\" /*node.id*/ + \" \" + key + \" \" + val + \"<br>\\n\");\n    }\n  },\n  /* ******************************** *\n   *  This renderer does not need to\n   *  override draw/update* methods\n   *  since it provides draw/update*Prim\n   *  methods.\n   * ******************************** */\n\n  /* **************************\n   *    Lines\n   * **************************/\n\n  // documented in AbstractRenderer\n  updateTicks: function (ticks) {\n    var i,\n      len,\n      c,\n      x,\n      y,\n      r = this.resolution,\n      tickArr = [];\n    len = ticks.ticks.length;\n    for (i = 0; i < len; i++) {\n      c = ticks.ticks[i];\n      x = c[0];\n      y = c[1];\n      if (Type.isNumber(x[0]) && Type.isNumber(x[1])) {\n        tickArr.push(\" m \" + Math.round(r * x[0]) + \", \" + Math.round(r * y[0]) + \" l \" + Math.round(r * x[1]) + \", \" + Math.round(r * y[1]) + \" \");\n      }\n    }\n    if (!Type.exists(ticks.rendNode)) {\n      ticks.rendNode = this.createPrim(\"path\", ticks.id);\n      this.appendChildPrim(ticks.rendNode, Type.evaluate(ticks.visProp.layer));\n    }\n    this._setAttr(ticks.rendNode, \"stroked\", \"true\");\n    this._setAttr(ticks.rendNode, \"strokecolor\", Type.evaluate(ticks.visProp.strokecolor), 1);\n    this._setAttr(ticks.rendNode, \"strokeweight\", Type.evaluate(ticks.visProp.strokewidth));\n    this._setAttr(ticks.rendNodeStroke, \"opacity\", Type.evaluate(ticks.visProp.strokeopacity) * 100 + \"%\");\n    this.updatePathPrim(ticks.rendNode, tickArr, ticks.board);\n  },\n  /* **************************\n   *    Text related stuff\n   * **************************/\n\n  // Already documented in JXG.AbstractRenderer\n  displayCopyright: function (str, fontsize) {\n    var node, t;\n    node = this.createNode(\"textbox\");\n    node.style.position = \"absolute\";\n    this._setAttr(node, \"id\", this.container.id + \"_\" + \"licenseText\");\n    node.style.left = 20;\n    node.style.top = 2;\n    node.style.fontSize = fontsize;\n    node.style.color = \"#356AA0\";\n    node.style.fontFamily = \"Arial,Helvetica,sans-serif\";\n    this._setAttr(node, \"opacity\", \"30%\");\n    node.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand', enabled = false) progid:DXImageTransform.Microsoft.Alpha(opacity = 30, enabled = true)\";\n    t = this.container.ownerDocument.createTextNode(str);\n    node.appendChild(t);\n    this.appendChildPrim(node, 0);\n  },\n  // documented in AbstractRenderer\n  drawInternalText: function (el) {\n    var node;\n    node = this.createNode(\"textbox\");\n    node.style.position = \"absolute\";\n    el.rendNodeText = this.container.ownerDocument.createTextNode(\"\");\n    node.appendChild(el.rendNodeText);\n    this.appendChildPrim(node, 9);\n    node.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand', enabled = false) progid:DXImageTransform.Microsoft.Alpha(opacity = 100, enabled = false)\";\n    return node;\n  },\n  // documented in AbstractRenderer\n  updateInternalText: function (el) {\n    var v,\n      content = el.plaintext,\n      m = this.joinTransforms(el, el.transformations),\n      offset = [0, 0],\n      maxX,\n      maxY,\n      minX,\n      minY,\n      i,\n      node = el.rendNode,\n      p = [],\n      ev_ax = el.getAnchorX(),\n      ev_ay = el.getAnchorY();\n    if (!isNaN(el.coords.scrCoords[1] + el.coords.scrCoords[2])) {\n      // Horizontal\n      if (ev_ax === \"right\") {\n        offset[0] = 1;\n      } else if (ev_ax === \"middle\") {\n        offset[0] = 0.5;\n      } // default (ev_ax === 'left') offset[0] = 0;\n\n      // Vertical\n      if (ev_ay === \"bottom\") {\n        offset[1] = 1;\n      } else if (ev_ay === \"middle\") {\n        offset[1] = 0.5;\n      } // default (ev_ay === 'top') offset[1] = 0;\n\n      // Compute maxX, maxY, minX, minY\n      p[0] = Mat.matVecMult(m, [1, el.coords.scrCoords[1] - offset[0] * el.size[0], el.coords.scrCoords[2] + (1 - offset[1]) * el.size[1] + this.vOffsetText]);\n      p[0][1] /= p[0][0];\n      p[0][2] /= p[0][0];\n      p[1] = Mat.matVecMult(m, [1, el.coords.scrCoords[1] + (1 - offset[0]) * el.size[0], el.coords.scrCoords[2] + (1 - offset[1]) * el.size[1] + this.vOffsetText]);\n      p[1][1] /= p[1][0];\n      p[1][2] /= p[1][0];\n      p[2] = Mat.matVecMult(m, [1, el.coords.scrCoords[1] + (1 - offset[0]) * el.size[0], el.coords.scrCoords[2] - offset[1] * el.size[1] + this.vOffsetText]);\n      p[2][1] /= p[2][0];\n      p[2][2] /= p[2][0];\n      p[3] = Mat.matVecMult(m, [1, el.coords.scrCoords[1] - offset[0] * el.size[0], el.coords.scrCoords[2] - offset[1] * el.size[1] + this.vOffsetText]);\n      p[3][1] /= p[3][0];\n      p[3][2] /= p[3][0];\n      maxX = p[0][1];\n      minX = p[0][1];\n      maxY = p[0][2];\n      minY = p[0][2];\n      for (i = 1; i < 4; i++) {\n        maxX = Math.max(maxX, p[i][1]);\n        minX = Math.min(minX, p[i][1]);\n        maxY = Math.max(maxY, p[i][2]);\n        minY = Math.min(minY, p[i][2]);\n      }\n\n      // Horizontal\n      v = offset[0] === 1 ? Math.floor(el.board.canvasWidth - maxX) : Math.floor(minX);\n      if (el.visPropOld.left !== ev_ax + v) {\n        if (offset[0] === 1) {\n          el.rendNode.style.right = v + \"px\";\n          el.rendNode.style.left = \"auto\";\n        } else {\n          el.rendNode.style.left = v + \"px\";\n          el.rendNode.style.right = \"auto\";\n        }\n        el.visPropOld.left = ev_ax + v;\n      }\n\n      // Vertical\n      v = offset[1] === 1 ? Math.floor(el.board.canvasHeight - maxY) : Math.floor(minY);\n      if (el.visPropOld.top !== ev_ay + v) {\n        if (offset[1] === 1) {\n          el.rendNode.style.bottom = v + \"px\";\n          el.rendNode.style.top = \"auto\";\n        } else {\n          el.rendNode.style.top = v + \"px\";\n          el.rendNode.style.bottom = \"auto\";\n        }\n        el.visPropOld.top = ev_ay + v;\n      }\n    }\n    if (el.htmlStr !== content) {\n      el.rendNodeText.data = content;\n      el.htmlStr = content;\n    }\n\n    //this.transformImage(el, el.transformations);\n    node.filters.item(0).M11 = m[1][1];\n    node.filters.item(0).M12 = m[1][2];\n    node.filters.item(0).M21 = m[2][1];\n    node.filters.item(0).M22 = m[2][2];\n    node.filters.item(0).enabled = true;\n  },\n  /* **************************\n   *    Image related stuff\n   * **************************/\n\n  // Already documented in JXG.AbstractRenderer\n  drawImage: function (el) {\n    // IE 8: Bilder ueber data URIs werden bis 32kB unterstuetzt.\n    var node;\n    node = this.container.ownerDocument.createElement(\"img\");\n    node.style.position = \"absolute\";\n    this._setAttr(node, \"id\", this.container.id + \"_\" + el.id);\n    this.container.appendChild(node);\n    this.appendChildPrim(node, Type.evaluate(el.visProp.layer));\n\n    // Adding the rotation filter. This is always filter item 0:\n    // node.filters.item(0), see transformImage\n    // Also add the alpha filter. This is always filter item 1\n    // node.filters.item(1), see setObjectFillColor and setObjectSTrokeColor\n    //node.style.filter = node.style['-ms-filter'] = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand')\";\n    node.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand') progid:DXImageTransform.Microsoft.Alpha(opacity = 100, enabled = false)\";\n    el.rendNode = node;\n    this.updateImage(el);\n  },\n  // Already documented in JXG.AbstractRenderer\n  transformImage: function (el, t) {\n    var m,\n      maxX,\n      maxY,\n      minX,\n      minY,\n      i,\n      node = el.rendNode,\n      p = [],\n      len = t.length;\n    if (len > 0) {\n      /*\n      nt = el.rendNode.style.filter.toString();\n      if (!nt.match(/DXImageTransform/)) {\n          node.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand') \" + nt;\n      }\n      */\n\n      m = this.joinTransforms(el, t);\n      p[0] = Mat.matVecMult(m, el.coords.scrCoords);\n      p[0][1] /= p[0][0];\n      p[0][2] /= p[0][0];\n      p[1] = Mat.matVecMult(m, [1, el.coords.scrCoords[1] + el.size[0], el.coords.scrCoords[2]]);\n      p[1][1] /= p[1][0];\n      p[1][2] /= p[1][0];\n      p[2] = Mat.matVecMult(m, [1, el.coords.scrCoords[1] + el.size[0], el.coords.scrCoords[2] - el.size[1]]);\n      p[2][1] /= p[2][0];\n      p[2][2] /= p[2][0];\n      p[3] = Mat.matVecMult(m, [1, el.coords.scrCoords[1], el.coords.scrCoords[2] - el.size[1]]);\n      p[3][1] /= p[3][0];\n      p[3][2] /= p[3][0];\n      maxX = p[0][1];\n      minX = p[0][1];\n      maxY = p[0][2];\n      minY = p[0][2];\n      for (i = 1; i < 4; i++) {\n        maxX = Math.max(maxX, p[i][1]);\n        minX = Math.min(minX, p[i][1]);\n        maxY = Math.max(maxY, p[i][2]);\n        minY = Math.min(minY, p[i][2]);\n      }\n      node.style.left = Math.floor(minX) + \"px\";\n      node.style.top = Math.floor(minY) + \"px\";\n      node.filters.item(0).M11 = m[1][1];\n      node.filters.item(0).M12 = m[1][2];\n      node.filters.item(0).M21 = m[2][1];\n      node.filters.item(0).M22 = m[2][2];\n      node.filters.item(0).enabled = true;\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  updateImageURL: function (el) {\n    var url = Type.evaluate(el.url);\n    this._setAttr(el.rendNode, \"src\", url);\n  },\n  /* **************************\n   * Render primitive objects\n   * **************************/\n\n  // Already documented in JXG.AbstractRenderer\n  appendChildPrim: function (node, level) {\n    // For trace nodes\n    if (!Type.exists(level)) {\n      level = 0;\n    }\n    node.style.zIndex = level;\n    this.container.appendChild(node);\n    return node;\n  },\n  // Already documented in JXG.AbstractRenderer\n  appendNodesToElement: function (el, type) {\n    if (type === \"shape\" || type === \"path\" || type === \"polygon\") {\n      el.rendNodePath = this.getElementById(el.id + \"_path\");\n    }\n    el.rendNodeFill = this.getElementById(el.id + \"_fill\");\n    el.rendNodeStroke = this.getElementById(el.id + \"_stroke\");\n    el.rendNodeShadow = this.getElementById(el.id + \"_shadow\");\n    el.rendNode = this.getElementById(el.id);\n  },\n  // Already documented in JXG.AbstractRenderer\n  createPrim: function (type, id) {\n    var node,\n      pathNode,\n      fillNode = this.createNode(\"fill\"),\n      strokeNode = this.createNode(\"stroke\"),\n      shadowNode = this.createNode(\"shadow\");\n    this._setAttr(fillNode, \"id\", this.container.id + \"_\" + id + \"_fill\");\n    this._setAttr(strokeNode, \"id\", this.container.id + \"_\" + id + \"_stroke\");\n    this._setAttr(shadowNode, \"id\", this.container.id + \"_\" + id + \"_shadow\");\n    if (type === \"circle\" || type === \"ellipse\") {\n      node = this.createNode(\"oval\");\n      node.appendChild(fillNode);\n      node.appendChild(strokeNode);\n      node.appendChild(shadowNode);\n    } else if (type === \"polygon\" || type === \"path\" || type === \"shape\" || type === \"line\") {\n      node = this.createNode(\"shape\");\n      node.appendChild(fillNode);\n      node.appendChild(strokeNode);\n      node.appendChild(shadowNode);\n      pathNode = this.createNode(\"path\");\n      this._setAttr(pathNode, \"id\", this.container.id + \"_\" + id + \"_path\");\n      node.appendChild(pathNode);\n    } else {\n      node = this.createNode(type);\n      node.appendChild(fillNode);\n      node.appendChild(strokeNode);\n      node.appendChild(shadowNode);\n    }\n    node.style.position = \"absolute\";\n    node.style.left = \"0px\";\n    node.style.top = \"0px\";\n    this._setAttr(node, \"id\", this.container.id + \"_\" + id);\n    return node;\n  },\n  // Already documented in JXG.AbstractRenderer\n  remove: function (node) {\n    if (Type.exists(node)) {\n      node.removeNode(true);\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  makeArrows: function (el) {\n    var nodeStroke,\n      ev_fa = Type.evaluate(el.visProp.firstarrow),\n      ev_la = Type.evaluate(el.visProp.lastarrow);\n    if (el.visPropOld.firstarrow === ev_fa && el.visPropOld.lastarrow === ev_la) {\n      return;\n    }\n    if (ev_fa) {\n      nodeStroke = el.rendNodeStroke;\n      this._setAttr(nodeStroke, \"startarrow\", \"block\");\n      this._setAttr(nodeStroke, \"startarrowlength\", \"long\");\n    } else {\n      nodeStroke = el.rendNodeStroke;\n      if (Type.exists(nodeStroke)) {\n        this._setAttr(nodeStroke, \"startarrow\", \"none\");\n      }\n    }\n    if (ev_la) {\n      nodeStroke = el.rendNodeStroke;\n      this._setAttr(nodeStroke, \"id\", this.container.id + \"_\" + el.id + \"stroke\");\n      this._setAttr(nodeStroke, \"endarrow\", \"block\");\n      this._setAttr(nodeStroke, \"endarrowlength\", \"long\");\n    } else {\n      nodeStroke = el.rendNodeStroke;\n      if (Type.exists(nodeStroke)) {\n        this._setAttr(nodeStroke, \"endarrow\", \"none\");\n      }\n    }\n    el.visPropOld.firstarrow = ev_fa;\n    el.visPropOld.lastarrow = ev_la;\n  },\n  // Already documented in JXG.AbstractRenderer\n  updateEllipsePrim: function (node, x, y, rx, ry) {\n    node.style.left = Math.floor(x - rx) + \"px\";\n    node.style.top = Math.floor(y - ry) + \"px\";\n    node.style.width = Math.floor(Math.abs(rx) * 2) + \"px\";\n    node.style.height = Math.floor(Math.abs(ry) * 2) + \"px\";\n  },\n  // Already documented in JXG.AbstractRenderer\n  updateLinePrim: function (node, p1x, p1y, p2x, p2y, board) {\n    var s,\n      r = this.resolution;\n    if (!isNaN(p1x + p1y + p2x + p2y)) {\n      s = [\"m \", Math.floor(r * p1x), \", \", Math.floor(r * p1y), \" l \", Math.floor(r * p2x), \", \", Math.floor(r * p2y)];\n      this.updatePathPrim(node, s, board);\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  updatePathPrim: function (node, pointString, board) {\n    var x = board.canvasWidth,\n      y = board.canvasHeight;\n    if (pointString.length <= 0) {\n      pointString = [\"m 0,0\"];\n    }\n    node.style.width = x;\n    node.style.height = y;\n    this._setAttr(node, \"coordsize\", [Math.floor(this.resolution * x), Math.floor(this.resolution * y)].join(\",\"));\n    this._setAttr(node, \"path\", pointString.join(\"\"));\n  },\n  // Already documented in JXG.AbstractRenderer\n  updatePathStringPoint: function (el, size, type) {\n    var s = [],\n      mround = Math.round,\n      scr = el.coords.scrCoords,\n      sqrt32 = size * Math.sqrt(3) * 0.5,\n      s05 = size * 0.5,\n      r = this.resolution;\n    if (type === \"x\") {\n      s.push([\" m \", mround(r * (scr[1] - size)), \", \", mround(r * (scr[2] - size)), \" l \", mround(r * (scr[1] + size)), \", \", mround(r * (scr[2] + size)), \" m \", mround(r * (scr[1] + size)), \", \", mround(r * (scr[2] - size)), \" l \", mround(r * (scr[1] - size)), \", \", mround(r * (scr[2] + size))].join(\"\"));\n    } else if (type === \"+\") {\n      s.push([\" m \", mround(r * (scr[1] - size)), \", \", mround(r * scr[2]), \" l \", mround(r * (scr[1] + size)), \", \", mround(r * scr[2]), \" m \", mround(r * scr[1]), \", \", mround(r * (scr[2] - size)), \" l \", mround(r * scr[1]), \", \", mround(r * (scr[2] + size))].join(\"\"));\n    } else if (type === \"<>\" || type === \"<<>>\") {\n      if (type === \"<<>>\") {\n        size *= 1.41;\n      }\n      s.push([\" m \", mround(r * (scr[1] - size)), \", \", mround(r * scr[2]), \" l \", mround(r * scr[1]), \", \", mround(r * (scr[2] + size)), \" l \", mround(r * (scr[1] + size)), \", \", mround(r * scr[2]), \" l \", mround(r * scr[1]), \", \", mround(r * (scr[2] - size)), \" x e \"].join(\"\"));\n    } else if (type === \"^\") {\n      s.push([\" m \", mround(r * scr[1]), \", \", mround(r * (scr[2] - size)), \" l \", mround(r * (scr[1] - sqrt32)), \", \", mround(r * (scr[2] + s05)), \" l \", mround(r * (scr[1] + sqrt32)), \", \", mround(r * (scr[2] + s05)), \" x e \"].join(\"\"));\n    } else if (type === \"v\") {\n      s.push([\" m \", mround(r * scr[1]), \", \", mround(r * (scr[2] + size)), \" l \", mround(r * (scr[1] - sqrt32)), \", \", mround(r * (scr[2] - s05)), \" l \", mround(r * (scr[1] + sqrt32)), \", \", mround(r * (scr[2] - s05)), \" x e \"].join(\"\"));\n    } else if (type === \">\") {\n      s.push([\" m \", mround(r * (scr[1] + size)), \", \", mround(r * scr[2]), \" l \", mround(r * (scr[1] - s05)), \", \", mround(r * (scr[2] - sqrt32)), \" l \", mround(r * (scr[1] - s05)), \", \", mround(r * (scr[2] + sqrt32)), \" l \", mround(r * (scr[1] + size)), \", \", mround(r * scr[2])].join(\"\"));\n    } else if (type === \"<\") {\n      s.push([\" m \", mround(r * (scr[1] - size)), \", \", mround(r * scr[2]), \" l \", mround(r * (scr[1] + s05)), \", \", mround(r * (scr[2] - sqrt32)), \" l \", mround(r * (scr[1] + s05)), \", \", mround(r * (scr[2] + sqrt32)), \" x e \"].join(\"\"));\n    }\n    return s;\n  },\n  // Already documented in JXG.AbstractRenderer\n  updatePathStringPrim: function (el) {\n    var i,\n      scr,\n      pStr = [],\n      r = this.resolution,\n      mround = Math.round,\n      symbm = \" m \",\n      symbl = \" l \",\n      symbc = \" c \",\n      nextSymb = symbm,\n      len = Math.min(el.numberPoints, 8192); // otherwise IE 7 crashes in hilbert.html\n\n    if (el.numberPoints <= 0) {\n      return \"\";\n    }\n    len = Math.min(len, el.points.length);\n    if (el.bezierDegree === 1) {\n      /*\n      if (isNotPlot && el.board.options.curve.RDPsmoothing) {\n          el.points = Numerics.RamerDouglasPeucker(el.points, 1.0);\n      }\n      */\n\n      for (i = 0; i < len; i++) {\n        scr = el.points[i].scrCoords;\n        if (isNaN(scr[1]) || isNaN(scr[2])) {\n          // PenUp\n          nextSymb = symbm;\n        } else {\n          // IE has problems with values  being too far away.\n          if (scr[1] > 20000.0) {\n            scr[1] = 20000.0;\n          } else if (scr[1] < -20000.0) {\n            scr[1] = -20000.0;\n          }\n          if (scr[2] > 20000.0) {\n            scr[2] = 20000.0;\n          } else if (scr[2] < -20000.0) {\n            scr[2] = -20000.0;\n          }\n          pStr.push([nextSymb, mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\"));\n          nextSymb = symbl;\n        }\n      }\n    } else if (el.bezierDegree === 3) {\n      i = 0;\n      while (i < len) {\n        scr = el.points[i].scrCoords;\n        if (isNaN(scr[1]) || isNaN(scr[2])) {\n          // PenUp\n          nextSymb = symbm;\n        } else {\n          pStr.push([nextSymb, mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\"));\n          if (nextSymb === symbc) {\n            i += 1;\n            scr = el.points[i].scrCoords;\n            pStr.push([\" \", mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\"));\n            i += 1;\n            scr = el.points[i].scrCoords;\n            pStr.push([\" \", mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\"));\n          }\n          nextSymb = symbc;\n        }\n        i += 1;\n      }\n    }\n    pStr.push(\" e\");\n    return pStr;\n  },\n  // Already documented in JXG.AbstractRenderer\n  updatePathStringBezierPrim: function (el) {\n    var i,\n      j,\n      k,\n      scr,\n      lx,\n      ly,\n      pStr = [],\n      f = Type.evaluate(el.visProp.strokewidth),\n      r = this.resolution,\n      mround = Math.round,\n      symbm = \" m \",\n      symbl = \" c \",\n      nextSymb = symbm,\n      isNoPlot = Type.evaluate(el.visProp.curvetype) !== \"plot\",\n      len = Math.min(el.numberPoints, 8192); // otherwise IE 7 crashes in hilbert.html\n\n    if (el.numberPoints <= 0) {\n      return \"\";\n    }\n    if (isNoPlot && el.board.options.curve.RDPsmoothing) {\n      el.points = Numerics.RamerDouglasPeucker(el.points, 1.0);\n    }\n    len = Math.min(len, el.points.length);\n    for (j = 1; j < 3; j++) {\n      nextSymb = symbm;\n      for (i = 0; i < len; i++) {\n        scr = el.points[i].scrCoords;\n        if (isNaN(scr[1]) || isNaN(scr[2])) {\n          // PenUp\n          nextSymb = symbm;\n        } else {\n          // IE has problems with values  being too far away.\n          if (scr[1] > 20000.0) {\n            scr[1] = 20000.0;\n          } else if (scr[1] < -20000.0) {\n            scr[1] = -20000.0;\n          }\n          if (scr[2] > 20000.0) {\n            scr[2] = 20000.0;\n          } else if (scr[2] < -20000.0) {\n            scr[2] = -20000.0;\n          }\n          if (nextSymb === symbm) {\n            pStr.push([nextSymb, mround(r * scr[1]), \" \", mround(r * scr[2])].join(\"\"));\n          } else {\n            k = 2 * j;\n            pStr.push([nextSymb, mround(r * (lx + (scr[1] - lx) * 0.333 + f * (k * Math.random() - j))), \" \", mround(r * (ly + (scr[2] - ly) * 0.333 + f * (k * Math.random() - j))), \" \", mround(r * (lx + (scr[1] - lx) * 0.666 + f * (k * Math.random() - j))), \" \", mround(r * (ly + (scr[2] - ly) * 0.666 + f * (k * Math.random() - j))), \" \", mround(r * scr[1]), \" \", mround(r * scr[2])].join(\"\"));\n          }\n          nextSymb = symbl;\n          lx = scr[1];\n          ly = scr[2];\n        }\n      }\n    }\n    pStr.push(\" e\");\n    return pStr;\n  },\n  // Already documented in JXG.AbstractRenderer\n  updatePolygonPrim: function (node, el) {\n    var i,\n      len = el.vertices.length,\n      r = this.resolution,\n      scr,\n      pStr = [];\n    this._setAttr(node, \"stroked\", \"false\");\n    scr = el.vertices[0].coords.scrCoords;\n    if (isNaN(scr[1] + scr[2])) {\n      return;\n    }\n    pStr.push([\"m \", Math.floor(r * scr[1]), \",\", Math.floor(r * scr[2]), \" l \"].join(\"\"));\n    for (i = 1; i < len - 1; i++) {\n      if (el.vertices[i].isReal) {\n        scr = el.vertices[i].coords.scrCoords;\n        if (isNaN(scr[1] + scr[2])) {\n          return;\n        }\n        pStr.push(Math.floor(r * scr[1]) + \",\" + Math.floor(r * scr[2]));\n      } else {\n        this.updatePathPrim(node, \"\", el.board);\n        return;\n      }\n      if (i < len - 2) {\n        pStr.push(\", \");\n      }\n    }\n    pStr.push(\" x e\");\n    this.updatePathPrim(node, pStr, el.board);\n  },\n  // Already documented in JXG.AbstractRenderer\n  updateRectPrim: function (node, x, y, w, h) {\n    node.style.left = Math.floor(x) + \"px\";\n    node.style.top = Math.floor(y) + \"px\";\n    if (w >= 0) {\n      node.style.width = w + \"px\";\n    }\n    if (h >= 0) {\n      node.style.height = h + \"px\";\n    }\n  },\n  /* **************************\n   *  Set Attributes\n   * **************************/\n\n  // Already documented in JXG.AbstractRenderer\n  setPropertyPrim: function (node, key, val) {\n    var keyVml = \"\",\n      v;\n    switch (key) {\n      case \"stroke\":\n        keyVml = \"strokecolor\";\n        break;\n      case \"stroke-width\":\n        keyVml = \"strokeweight\";\n        break;\n      case \"stroke-dasharray\":\n        keyVml = \"dashstyle\";\n        break;\n    }\n    if (keyVml !== \"\") {\n      v = Type.evaluate(val);\n      this._setAttr(node, keyVml, v);\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  display: function (el, val) {\n    if (el && el.rendNode) {\n      el.visPropOld.visible = val;\n      if (val) {\n        el.rendNode.style.visibility = \"inherit\";\n      } else {\n        el.rendNode.style.visibility = \"hidden\";\n      }\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  show: function (el) {\n    JXG.deprecated(\"Board.renderer.show()\", \"Board.renderer.display()\");\n    if (el && el.rendNode) {\n      el.rendNode.style.visibility = \"inherit\";\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  hide: function (el) {\n    JXG.deprecated(\"Board.renderer.hide()\", \"Board.renderer.display()\");\n    if (el && el.rendNode) {\n      el.rendNode.style.visibility = \"hidden\";\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  setDashStyle: function (el, visProp) {\n    var node;\n    if (visProp.dash >= 0) {\n      node = el.rendNodeStroke;\n      this._setAttr(node, \"dashstyle\", this.dashArray[visProp.dash]);\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  setGradient: function (el) {\n    var nodeFill = el.rendNodeFill,\n      ev_g = Type.evaluate(el.visProp.gradient);\n    if (ev_g === \"linear\") {\n      this._setAttr(nodeFill, \"type\", \"gradient\");\n      this._setAttr(nodeFill, \"color2\", Type.evaluate(el.visProp.gradientsecondcolor));\n      this._setAttr(nodeFill, \"opacity2\", Type.evaluate(el.visProp.gradientsecondopacity));\n      this._setAttr(nodeFill, \"angle\", Type.evaluate(el.visProp.gradientangle));\n    } else if (ev_g === \"radial\") {\n      this._setAttr(nodeFill, \"type\", \"gradientradial\");\n      this._setAttr(nodeFill, \"color2\", Type.evaluate(el.visProp.gradientsecondcolor));\n      this._setAttr(nodeFill, \"opacity2\", Type.evaluate(el.visProp.gradientsecondopacity));\n      this._setAttr(nodeFill, \"focusposition\", Type.evaluate(el.visProp.gradientpositionx) * 100 + \"%,\" + Type.evaluate(el.visProp.gradientpositiony) * 100 + \"%\");\n      this._setAttr(nodeFill, \"focussize\", \"0,0\");\n    } else {\n      this._setAttr(nodeFill, \"type\", \"solid\");\n    }\n  },\n  // Already documented in JXG.AbstractRenderer\n  setObjectFillColor: function (el, color, opacity) {\n    var rgba = Type.evaluate(color),\n      c,\n      rgbo,\n      o = Type.evaluate(opacity),\n      oo,\n      node = el.rendNode;\n    o = o > 0 ? o : 0;\n    if (el.visPropOld.fillcolor === rgba && el.visPropOld.fillopacity === o) {\n      return;\n    }\n    if (Type.exists(rgba) && rgba !== false) {\n      // RGB, not RGBA\n      if (rgba.length !== 9) {\n        c = rgba;\n        oo = o;\n        // True RGBA, not RGB\n      } else {\n        rgbo = Color.rgba2rgbo(rgba);\n        c = rgbo[0];\n        oo = o * rgbo[1];\n      }\n      if (c === \"none\" || c === false) {\n        this._setAttr(el.rendNode, \"filled\", \"false\");\n      } else {\n        this._setAttr(el.rendNode, \"filled\", \"true\");\n        this._setAttr(el.rendNode, \"fillcolor\", c);\n        if (Type.exists(oo) && el.rendNodeFill) {\n          this._setAttr(el.rendNodeFill, \"opacity\", oo * 100 + \"%\");\n        }\n      }\n      if (el.type === Const.OBJECT_TYPE_IMAGE) {\n        /*\n        t = el.rendNode.style.filter.toString();\n        if (t.match(/alpha/)) {\n            el.rendNode.style.filter = t.replace(/alpha\\(opacity *= *[0-9\\.]+\\)/, 'alpha(opacity = ' + (oo * 100) + ')');\n        } else {\n            el.rendNode.style.filter += ' alpha(opacity = ' + (oo * 100) + ')';\n        }\n        */\n        if (node.filters.length > 1) {\n          // Why am I sometimes seeing node.filters.length==0 here when I move the pointer around near [0,0]?\n          // Setting axes:true shows text labels!\n          node.filters.item(1).opacity = Math.round(oo * 100); // Why does setObjectFillColor not use Math.round?\n          node.filters.item(1).enabled = true;\n        }\n      }\n    }\n    el.visPropOld.fillcolor = rgba;\n    el.visPropOld.fillopacity = o;\n  },\n  // Already documented in JXG.AbstractRenderer\n  setObjectStrokeColor: function (el, color, opacity) {\n    var rgba = Type.evaluate(color),\n      c,\n      rgbo,\n      o = Type.evaluate(opacity),\n      oo,\n      node = el.rendNode,\n      nodeStroke;\n    o = o > 0 ? o : 0;\n    if (el.visPropOld.strokecolor === rgba && el.visPropOld.strokeopacity === o) {\n      return;\n    }\n\n    // this looks like it could be merged with parts of VMLRenderer.setObjectFillColor\n\n    if (Type.exists(rgba) && rgba !== false) {\n      // RGB, not RGBA\n      if (rgba.length !== 9) {\n        c = rgba;\n        oo = o;\n        // True RGBA, not RGB\n      } else {\n        rgbo = color.rgba2rgbo(rgba);\n        c = rgbo[0];\n        oo = o * rgbo[1];\n      }\n      if (el.elementClass === Const.OBJECT_CLASS_TEXT) {\n        //node.style.filter = ' alpha(opacity = ' + oo + ')';\n        /*\n        t = node.style.filter.toString();\n        if (t.match(/alpha/)) {\n            node.style.filter =\n            t.replace(/alpha\\(opacity *= *[0-9\\.]+\\)/, 'alpha(opacity = ' + oo + ')');\n        } else {\n            node.style.filter += ' alpha(opacity = ' + oo + ')';\n        }\n        */\n        if (node.filters.length > 1) {\n          // Why am I sometimes seeing node.filters.length==0 here when I move the pointer around near [0,0]?\n          // Setting axes:true shows text labels!\n          node.filters.item(1).opacity = Math.round(oo * 100);\n          node.filters.item(1).enabled = true;\n        }\n        node.style.color = c;\n      } else {\n        if (c !== false) {\n          this._setAttr(node, \"stroked\", \"true\");\n          this._setAttr(node, \"strokecolor\", c);\n        }\n        nodeStroke = el.rendNodeStroke;\n        if (Type.exists(oo) && el.type !== Const.OBJECT_TYPE_IMAGE) {\n          this._setAttr(nodeStroke, \"opacity\", oo * 100 + \"%\");\n        }\n      }\n    }\n    el.visPropOld.strokecolor = rgba;\n    el.visPropOld.strokeopacity = o;\n  },\n  // Already documented in JXG.AbstractRenderer\n  setObjectStrokeWidth: function (el, width) {\n    var w = Type.evaluate(width),\n      node;\n    if (isNaN(w) || el.visPropOld.strokewidth === w) {\n      return;\n    }\n    node = el.rendNode;\n    this.setPropertyPrim(node, \"stroked\", \"true\");\n    if (Type.exists(w)) {\n      this.setPropertyPrim(node, \"stroke-width\", w);\n      if (w === 0 && Type.exists(el.rendNodeStroke)) {\n        this._setAttr(node, \"stroked\", \"false\");\n      }\n    }\n    el.visPropOld.strokewidth = w;\n  },\n  // Already documented in JXG.AbstractRenderer\n  setShadow: function (el) {\n    var nodeShadow = el.rendNodeShadow,\n      ev_s = Type.evaluate(el.visProp.shadow);\n    if (!nodeShadow || el.visPropOld.shadow === ev_s) {\n      return;\n    }\n    if (ev_s) {\n      this._setAttr(nodeShadow, \"On\", \"True\");\n      this._setAttr(nodeShadow, \"Offset\", \"3pt,3pt\");\n      this._setAttr(nodeShadow, \"Opacity\", \"60%\");\n      this._setAttr(nodeShadow, \"Color\", \"#aaaaaa\");\n    } else {\n      this._setAttr(nodeShadow, \"On\", \"False\");\n    }\n    el.visPropOld.shadow = ev_s;\n  },\n  /* **************************\n   * renderer control\n   * **************************/\n\n  // Already documented in JXG.AbstractRenderer\n  suspendRedraw: function () {\n    this.container.style.display = \"none\";\n  },\n  // Already documented in JXG.AbstractRenderer\n  unsuspendRedraw: function () {\n    this.container.style.display = \"\";\n  }\n});\nexport default JXG.VMLRenderer;","map":{"version":3,"names":["JXG","AbstractRenderer","Const","Type","Color","Mat","Numerics","VMLRenderer","container","type","style","overflow","position","onselectstart","resolution","exists","vmlStylesheet","ownerDocument","namespaces","add","createStyleSheet","addRule","jxgvml","createNode","tagName","createElement","e","dashArray","prototype","extend","_setAttr","node","key","val","iFlag","documentMode","setAttribute","debug","updateTicks","ticks","i","len","c","x","y","r","tickArr","length","isNumber","push","Math","round","rendNode","createPrim","id","appendChildPrim","evaluate","visProp","layer","strokecolor","strokewidth","rendNodeStroke","strokeopacity","updatePathPrim","board","displayCopyright","str","fontsize","t","left","top","fontSize","color","fontFamily","filter","createTextNode","appendChild","drawInternalText","el","rendNodeText","updateInternalText","v","content","plaintext","m","joinTransforms","transformations","offset","maxX","maxY","minX","minY","p","ev_ax","getAnchorX","ev_ay","getAnchorY","isNaN","coords","scrCoords","matVecMult","size","vOffsetText","max","min","floor","canvasWidth","visPropOld","right","canvasHeight","bottom","htmlStr","data","filters","item","M11","M12","M21","M22","enabled","drawImage","updateImage","transformImage","updateImageURL","url","level","zIndex","appendNodesToElement","rendNodePath","getElementById","rendNodeFill","rendNodeShadow","pathNode","fillNode","strokeNode","shadowNode","remove","removeNode","makeArrows","nodeStroke","ev_fa","firstarrow","ev_la","lastarrow","updateEllipsePrim","rx","ry","width","abs","height","updateLinePrim","p1x","p1y","p2x","p2y","s","pointString","join","updatePathStringPoint","mround","scr","sqrt32","sqrt","s05","updatePathStringPrim","pStr","symbm","symbl","symbc","nextSymb","numberPoints","points","bezierDegree","updatePathStringBezierPrim","j","k","lx","ly","f","isNoPlot","curvetype","options","curve","RDPsmoothing","RamerDouglasPeucker","random","updatePolygonPrim","vertices","isReal","updateRectPrim","w","h","setPropertyPrim","keyVml","display","visible","visibility","show","deprecated","hide","setDashStyle","dash","setGradient","nodeFill","ev_g","gradient","gradientsecondcolor","gradientsecondopacity","gradientangle","gradientpositionx","gradientpositiony","setObjectFillColor","opacity","rgba","rgbo","o","oo","fillcolor","fillopacity","rgba2rgbo","OBJECT_TYPE_IMAGE","setObjectStrokeColor","elementClass","OBJECT_CLASS_TEXT","setObjectStrokeWidth","setShadow","nodeShadow","ev_s","shadow","suspendRedraw","unsuspendRedraw"],"sources":["D:/study things/web/weblab4-main/node_modules/jsxgraph/src/renderer/vml.js"],"sourcesContent":["/*\n    Copyright 2008-2023\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true, AMprocessNode: true, MathJax: true, document: true */\n/*jslint nomen: true, plusplus: true, newcap:true*/\n\nimport JXG from \"../jxg\";\nimport AbstractRenderer from \"./abstract\";\nimport Const from \"../base/constants\";\nimport Type from \"../utils/type\";\nimport Color from \"../utils/color\";\nimport Mat from \"../math/math\";\nimport Numerics from \"../math/numerics\";\n\n/**\n * Uses VML to implement the rendering methods defined in {@link JXG.AbstractRenderer}.\n * VML was used in very old Internet Explorer versions upto IE 8.\n *\n *\n * @class JXG.VMLRenderer\n * @augments JXG.AbstractRenderer\n * @param {Node} container Reference to a DOM node containing the board.\n * @see JXG.AbstractRenderer\n * @deprecated\n */\nJXG.VMLRenderer = function (container) {\n    this.type = \"vml\";\n\n    this.container = container;\n    this.container.style.overflow = \"hidden\";\n    if (this.container.style.position === \"\") {\n        this.container.style.position = \"relative\";\n    }\n    this.container.onselectstart = function () {\n        return false;\n    };\n\n    this.resolution = 10; // Paths are drawn with a resolution of this.resolution/pixel.\n\n    // Add VML includes and namespace\n    // Original: IE <=7\n    //container.ownerDocument.createStyleSheet().addRule(\"v\\\\:*\", \"behavior: url(#default#VML);\");\n    if (!Type.exists(JXG.vmlStylesheet)) {\n        container.ownerDocument.namespaces.add(\"jxgvml\", \"urn:schemas-microsoft-com:vml\");\n        JXG.vmlStylesheet = this.container.ownerDocument.createStyleSheet();\n        JXG.vmlStylesheet.addRule(\".jxgvml\", \"behavior:url(#default#VML)\");\n    }\n\n    try {\n        if (!container.ownerDocument.namespaces.jxgvml) {\n            container.ownerDocument.namespaces.add(\"jxgvml\", \"urn:schemas-microsoft-com:vml\");\n        }\n\n        this.createNode = function (tagName) {\n            return container.ownerDocument.createElement(\n                \"<jxgvml:\" + tagName + ' class=\"jxgvml\">'\n            );\n        };\n    } catch (e) {\n        this.createNode = function (tagName) {\n            return container.ownerDocument.createElement(\n                \"<\" + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"jxgvml\">'\n            );\n        };\n    }\n\n    // dash styles\n    this.dashArray = [\n        \"Solid\",\n        \"1 1\",\n        \"ShortDash\",\n        \"Dash\",\n        \"LongDash\",\n        \"ShortDashDot\",\n        \"LongDashDot\"\n    ];\n};\n\nJXG.VMLRenderer.prototype = new AbstractRenderer();\n\nJXG.extend(\n    JXG.VMLRenderer.prototype,\n    /** @lends JXG.VMLRenderer.prototype */ {\n        /**\n         * Sets attribute <tt>key</tt> of node <tt>node</tt> to <tt>value</tt>.\n         * @param {Node} node A DOM node.\n         * @param {String} key Name of the attribute.\n         * @param {String} val New value of the attribute.\n         * @param {Boolean} [iFlag=false] If false, the attribute's name is case insensitive.\n         */\n        _setAttr: function (node, key, val, iFlag) {\n            try {\n                if (this.container.ownerDocument.documentMode === 8) {\n                    node[key] = val;\n                } else {\n                    node.setAttribute(key, val, iFlag);\n                }\n            } catch (e) {\n                JXG.debug(\"_setAttr:\" /*node.id*/ + \" \" + key + \" \" + val + \"<br>\\n\");\n            }\n        },\n\n        /* ******************************** *\n         *  This renderer does not need to\n         *  override draw/update* methods\n         *  since it provides draw/update*Prim\n         *  methods.\n         * ******************************** */\n\n        /* **************************\n         *    Lines\n         * **************************/\n\n        // documented in AbstractRenderer\n        updateTicks: function (ticks) {\n            var i,\n                len,\n                c,\n                x,\n                y,\n                r = this.resolution,\n                tickArr = [];\n\n            len = ticks.ticks.length;\n            for (i = 0; i < len; i++) {\n                c = ticks.ticks[i];\n                x = c[0];\n                y = c[1];\n\n                if (Type.isNumber(x[0]) && Type.isNumber(x[1])) {\n                    tickArr.push(\n                        \" m \" +\n                            Math.round(r * x[0]) +\n                            \", \" +\n                            Math.round(r * y[0]) +\n                            \" l \" +\n                            Math.round(r * x[1]) +\n                            \", \" +\n                            Math.round(r * y[1]) +\n                            \" \"\n                    );\n                }\n            }\n\n            if (!Type.exists(ticks.rendNode)) {\n                ticks.rendNode = this.createPrim(\"path\", ticks.id);\n                this.appendChildPrim(ticks.rendNode, Type.evaluate(ticks.visProp.layer));\n            }\n\n            this._setAttr(ticks.rendNode, \"stroked\", \"true\");\n            this._setAttr(\n                ticks.rendNode,\n                \"strokecolor\",\n                Type.evaluate(ticks.visProp.strokecolor),\n                1\n            );\n            this._setAttr(\n                ticks.rendNode,\n                \"strokeweight\",\n                Type.evaluate(ticks.visProp.strokewidth)\n            );\n            this._setAttr(\n                ticks.rendNodeStroke,\n                \"opacity\",\n                Type.evaluate(ticks.visProp.strokeopacity) * 100 + \"%\"\n            );\n            this.updatePathPrim(ticks.rendNode, tickArr, ticks.board);\n        },\n\n        /* **************************\n         *    Text related stuff\n         * **************************/\n\n        // Already documented in JXG.AbstractRenderer\n        displayCopyright: function (str, fontsize) {\n            var node, t;\n\n            node = this.createNode(\"textbox\");\n            node.style.position = \"absolute\";\n            this._setAttr(node, \"id\", this.container.id + \"_\" + \"licenseText\");\n\n            node.style.left = 20;\n            node.style.top = 2;\n            node.style.fontSize = fontsize;\n            node.style.color = \"#356AA0\";\n            node.style.fontFamily = \"Arial,Helvetica,sans-serif\";\n            this._setAttr(node, \"opacity\", \"30%\");\n            node.style.filter =\n                \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand', enabled = false) progid:DXImageTransform.Microsoft.Alpha(opacity = 30, enabled = true)\";\n\n            t = this.container.ownerDocument.createTextNode(str);\n            node.appendChild(t);\n            this.appendChildPrim(node, 0);\n        },\n\n        // documented in AbstractRenderer\n        drawInternalText: function (el) {\n            var node;\n            node = this.createNode(\"textbox\");\n            node.style.position = \"absolute\";\n            el.rendNodeText = this.container.ownerDocument.createTextNode(\"\");\n            node.appendChild(el.rendNodeText);\n            this.appendChildPrim(node, 9);\n            node.style.filter =\n                \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand', enabled = false) progid:DXImageTransform.Microsoft.Alpha(opacity = 100, enabled = false)\";\n\n            return node;\n        },\n\n        // documented in AbstractRenderer\n        updateInternalText: function (el) {\n            var v,\n                content = el.plaintext,\n                m = this.joinTransforms(el, el.transformations),\n                offset = [0, 0],\n                maxX,\n                maxY,\n                minX,\n                minY,\n                i,\n                node = el.rendNode,\n                p = [],\n                ev_ax = el.getAnchorX(),\n                ev_ay = el.getAnchorY();\n\n            if (!isNaN(el.coords.scrCoords[1] + el.coords.scrCoords[2])) {\n                // Horizontal\n                if (ev_ax === \"right\") {\n                    offset[0] = 1;\n                } else if (ev_ax === \"middle\") {\n                    offset[0] = 0.5;\n                } // default (ev_ax === 'left') offset[0] = 0;\n\n                // Vertical\n                if (ev_ay === \"bottom\") {\n                    offset[1] = 1;\n                } else if (ev_ay === \"middle\") {\n                    offset[1] = 0.5;\n                } // default (ev_ay === 'top') offset[1] = 0;\n\n                // Compute maxX, maxY, minX, minY\n                p[0] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1] - offset[0] * el.size[0],\n                    el.coords.scrCoords[2] + (1 - offset[1]) * el.size[1] + this.vOffsetText\n                ]);\n                p[0][1] /= p[0][0];\n                p[0][2] /= p[0][0];\n                p[1] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1] + (1 - offset[0]) * el.size[0],\n                    el.coords.scrCoords[2] + (1 - offset[1]) * el.size[1] + this.vOffsetText\n                ]);\n                p[1][1] /= p[1][0];\n                p[1][2] /= p[1][0];\n                p[2] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1] + (1 - offset[0]) * el.size[0],\n                    el.coords.scrCoords[2] - offset[1] * el.size[1] + this.vOffsetText\n                ]);\n                p[2][1] /= p[2][0];\n                p[2][2] /= p[2][0];\n                p[3] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1] - offset[0] * el.size[0],\n                    el.coords.scrCoords[2] - offset[1] * el.size[1] + this.vOffsetText\n                ]);\n                p[3][1] /= p[3][0];\n                p[3][2] /= p[3][0];\n                maxX = p[0][1];\n                minX = p[0][1];\n                maxY = p[0][2];\n                minY = p[0][2];\n\n                for (i = 1; i < 4; i++) {\n                    maxX = Math.max(maxX, p[i][1]);\n                    minX = Math.min(minX, p[i][1]);\n                    maxY = Math.max(maxY, p[i][2]);\n                    minY = Math.min(minY, p[i][2]);\n                }\n\n                // Horizontal\n                v =\n                    offset[0] === 1\n                        ? Math.floor(el.board.canvasWidth - maxX)\n                        : Math.floor(minX);\n                if (el.visPropOld.left !== ev_ax + v) {\n                    if (offset[0] === 1) {\n                        el.rendNode.style.right = v + \"px\";\n                        el.rendNode.style.left = \"auto\";\n                    } else {\n                        el.rendNode.style.left = v + \"px\";\n                        el.rendNode.style.right = \"auto\";\n                    }\n                    el.visPropOld.left = ev_ax + v;\n                }\n\n                // Vertical\n                v =\n                    offset[1] === 1\n                        ? Math.floor(el.board.canvasHeight - maxY)\n                        : Math.floor(minY);\n                if (el.visPropOld.top !== ev_ay + v) {\n                    if (offset[1] === 1) {\n                        el.rendNode.style.bottom = v + \"px\";\n                        el.rendNode.style.top = \"auto\";\n                    } else {\n                        el.rendNode.style.top = v + \"px\";\n                        el.rendNode.style.bottom = \"auto\";\n                    }\n                    el.visPropOld.top = ev_ay + v;\n                }\n            }\n\n            if (el.htmlStr !== content) {\n                el.rendNodeText.data = content;\n                el.htmlStr = content;\n            }\n\n            //this.transformImage(el, el.transformations);\n            node.filters.item(0).M11 = m[1][1];\n            node.filters.item(0).M12 = m[1][2];\n            node.filters.item(0).M21 = m[2][1];\n            node.filters.item(0).M22 = m[2][2];\n            node.filters.item(0).enabled = true;\n        },\n\n        /* **************************\n         *    Image related stuff\n         * **************************/\n\n        // Already documented in JXG.AbstractRenderer\n        drawImage: function (el) {\n            // IE 8: Bilder ueber data URIs werden bis 32kB unterstuetzt.\n            var node;\n\n            node = this.container.ownerDocument.createElement(\"img\");\n            node.style.position = \"absolute\";\n            this._setAttr(node, \"id\", this.container.id + \"_\" + el.id);\n\n            this.container.appendChild(node);\n            this.appendChildPrim(node, Type.evaluate(el.visProp.layer));\n\n            // Adding the rotation filter. This is always filter item 0:\n            // node.filters.item(0), see transformImage\n            // Also add the alpha filter. This is always filter item 1\n            // node.filters.item(1), see setObjectFillColor and setObjectSTrokeColor\n            //node.style.filter = node.style['-ms-filter'] = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand')\";\n            node.style.filter =\n                \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand') progid:DXImageTransform.Microsoft.Alpha(opacity = 100, enabled = false)\";\n            el.rendNode = node;\n            this.updateImage(el);\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        transformImage: function (el, t) {\n            var m,\n                maxX,\n                maxY,\n                minX,\n                minY,\n                i,\n                node = el.rendNode,\n                p = [],\n                len = t.length;\n\n            if (len > 0) {\n                /*\n                nt = el.rendNode.style.filter.toString();\n                if (!nt.match(/DXImageTransform/)) {\n                    node.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand') \" + nt;\n                }\n                */\n\n                m = this.joinTransforms(el, t);\n                p[0] = Mat.matVecMult(m, el.coords.scrCoords);\n                p[0][1] /= p[0][0];\n                p[0][2] /= p[0][0];\n                p[1] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1] + el.size[0],\n                    el.coords.scrCoords[2]\n                ]);\n                p[1][1] /= p[1][0];\n                p[1][2] /= p[1][0];\n                p[2] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1] + el.size[0],\n                    el.coords.scrCoords[2] - el.size[1]\n                ]);\n                p[2][1] /= p[2][0];\n                p[2][2] /= p[2][0];\n                p[3] = Mat.matVecMult(m, [\n                    1,\n                    el.coords.scrCoords[1],\n                    el.coords.scrCoords[2] - el.size[1]\n                ]);\n                p[3][1] /= p[3][0];\n                p[3][2] /= p[3][0];\n                maxX = p[0][1];\n                minX = p[0][1];\n                maxY = p[0][2];\n                minY = p[0][2];\n\n                for (i = 1; i < 4; i++) {\n                    maxX = Math.max(maxX, p[i][1]);\n                    minX = Math.min(minX, p[i][1]);\n                    maxY = Math.max(maxY, p[i][2]);\n                    minY = Math.min(minY, p[i][2]);\n                }\n                node.style.left = Math.floor(minX) + \"px\";\n                node.style.top = Math.floor(minY) + \"px\";\n\n                node.filters.item(0).M11 = m[1][1];\n                node.filters.item(0).M12 = m[1][2];\n                node.filters.item(0).M21 = m[2][1];\n                node.filters.item(0).M22 = m[2][2];\n                node.filters.item(0).enabled = true;\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updateImageURL: function (el) {\n            var url = Type.evaluate(el.url);\n\n            this._setAttr(el.rendNode, \"src\", url);\n        },\n\n        /* **************************\n         * Render primitive objects\n         * **************************/\n\n        // Already documented in JXG.AbstractRenderer\n        appendChildPrim: function (node, level) {\n            // For trace nodes\n            if (!Type.exists(level)) {\n                level = 0;\n            }\n\n            node.style.zIndex = level;\n            this.container.appendChild(node);\n\n            return node;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        appendNodesToElement: function (el, type) {\n            if (type === \"shape\" || type === \"path\" || type === \"polygon\") {\n                el.rendNodePath = this.getElementById(el.id + \"_path\");\n            }\n            el.rendNodeFill = this.getElementById(el.id + \"_fill\");\n            el.rendNodeStroke = this.getElementById(el.id + \"_stroke\");\n            el.rendNodeShadow = this.getElementById(el.id + \"_shadow\");\n            el.rendNode = this.getElementById(el.id);\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        createPrim: function (type, id) {\n            var node,\n                pathNode,\n                fillNode = this.createNode(\"fill\"),\n                strokeNode = this.createNode(\"stroke\"),\n                shadowNode = this.createNode(\"shadow\");\n\n            this._setAttr(fillNode, \"id\", this.container.id + \"_\" + id + \"_fill\");\n            this._setAttr(strokeNode, \"id\", this.container.id + \"_\" + id + \"_stroke\");\n            this._setAttr(shadowNode, \"id\", this.container.id + \"_\" + id + \"_shadow\");\n\n            if (type === \"circle\" || type === \"ellipse\") {\n                node = this.createNode(\"oval\");\n                node.appendChild(fillNode);\n                node.appendChild(strokeNode);\n                node.appendChild(shadowNode);\n            } else if (\n                type === \"polygon\" ||\n                type === \"path\" ||\n                type === \"shape\" ||\n                type === \"line\"\n            ) {\n                node = this.createNode(\"shape\");\n                node.appendChild(fillNode);\n                node.appendChild(strokeNode);\n                node.appendChild(shadowNode);\n                pathNode = this.createNode(\"path\");\n                this._setAttr(pathNode, \"id\", this.container.id + \"_\" + id + \"_path\");\n                node.appendChild(pathNode);\n            } else {\n                node = this.createNode(type);\n                node.appendChild(fillNode);\n                node.appendChild(strokeNode);\n                node.appendChild(shadowNode);\n            }\n\n            node.style.position = \"absolute\";\n            node.style.left = \"0px\";\n            node.style.top = \"0px\";\n            this._setAttr(node, \"id\", this.container.id + \"_\" + id);\n\n            return node;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        remove: function (node) {\n            if (Type.exists(node)) {\n                node.removeNode(true);\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        makeArrows: function (el) {\n            var nodeStroke,\n                ev_fa = Type.evaluate(el.visProp.firstarrow),\n                ev_la = Type.evaluate(el.visProp.lastarrow);\n\n            if (el.visPropOld.firstarrow === ev_fa && el.visPropOld.lastarrow === ev_la) {\n                return;\n            }\n\n            if (ev_fa) {\n                nodeStroke = el.rendNodeStroke;\n                this._setAttr(nodeStroke, \"startarrow\", \"block\");\n                this._setAttr(nodeStroke, \"startarrowlength\", \"long\");\n            } else {\n                nodeStroke = el.rendNodeStroke;\n                if (Type.exists(nodeStroke)) {\n                    this._setAttr(nodeStroke, \"startarrow\", \"none\");\n                }\n            }\n\n            if (ev_la) {\n                nodeStroke = el.rendNodeStroke;\n                this._setAttr(nodeStroke, \"id\", this.container.id + \"_\" + el.id + \"stroke\");\n                this._setAttr(nodeStroke, \"endarrow\", \"block\");\n                this._setAttr(nodeStroke, \"endarrowlength\", \"long\");\n            } else {\n                nodeStroke = el.rendNodeStroke;\n                if (Type.exists(nodeStroke)) {\n                    this._setAttr(nodeStroke, \"endarrow\", \"none\");\n                }\n            }\n            el.visPropOld.firstarrow = ev_fa;\n            el.visPropOld.lastarrow = ev_la;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updateEllipsePrim: function (node, x, y, rx, ry) {\n            node.style.left = Math.floor(x - rx) + \"px\";\n            node.style.top = Math.floor(y - ry) + \"px\";\n            node.style.width = Math.floor(Math.abs(rx) * 2) + \"px\";\n            node.style.height = Math.floor(Math.abs(ry) * 2) + \"px\";\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updateLinePrim: function (node, p1x, p1y, p2x, p2y, board) {\n            var s,\n                r = this.resolution;\n\n            if (!isNaN(p1x + p1y + p2x + p2y)) {\n                s = [\n                    \"m \",\n                    Math.floor(r * p1x),\n                    \", \",\n                    Math.floor(r * p1y),\n                    \" l \",\n                    Math.floor(r * p2x),\n                    \", \",\n                    Math.floor(r * p2y)\n                ];\n                this.updatePathPrim(node, s, board);\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updatePathPrim: function (node, pointString, board) {\n            var x = board.canvasWidth,\n                y = board.canvasHeight;\n            if (pointString.length <= 0) {\n                pointString = [\"m 0,0\"];\n            }\n            node.style.width = x;\n            node.style.height = y;\n            this._setAttr(\n                node,\n                \"coordsize\",\n                [Math.floor(this.resolution * x), Math.floor(this.resolution * y)].join(\",\")\n            );\n            this._setAttr(node, \"path\", pointString.join(\"\"));\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updatePathStringPoint: function (el, size, type) {\n            var s = [],\n                mround = Math.round,\n                scr = el.coords.scrCoords,\n                sqrt32 = size * Math.sqrt(3) * 0.5,\n                s05 = size * 0.5,\n                r = this.resolution;\n\n            if (type === \"x\") {\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * (scr[1] - size)),\n                        \", \",\n                        mround(r * (scr[2] - size)),\n                        \" l \",\n                        mround(r * (scr[1] + size)),\n                        \", \",\n                        mround(r * (scr[2] + size)),\n                        \" m \",\n                        mround(r * (scr[1] + size)),\n                        \", \",\n                        mround(r * (scr[2] - size)),\n                        \" l \",\n                        mround(r * (scr[1] - size)),\n                        \", \",\n                        mround(r * (scr[2] + size))\n                    ].join(\"\")\n                );\n            } else if (type === \"+\") {\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * (scr[1] - size)),\n                        \", \",\n                        mround(r * scr[2]),\n                        \" l \",\n                        mround(r * (scr[1] + size)),\n                        \", \",\n                        mround(r * scr[2]),\n                        \" m \",\n                        mround(r * scr[1]),\n                        \", \",\n                        mround(r * (scr[2] - size)),\n                        \" l \",\n                        mround(r * scr[1]),\n                        \", \",\n                        mround(r * (scr[2] + size))\n                    ].join(\"\")\n                );\n            } else if (type === \"<>\" || type === \"<<>>\") {\n                if (type === \"<<>>\") {\n                    size *= 1.41;\n                }\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * (scr[1] - size)),\n                        \", \",\n                        mround(r * scr[2]),\n                        \" l \",\n                        mround(r * scr[1]),\n                        \", \",\n                        mround(r * (scr[2] + size)),\n                        \" l \",\n                        mround(r * (scr[1] + size)),\n                        \", \",\n                        mround(r * scr[2]),\n                        \" l \",\n                        mround(r * scr[1]),\n                        \", \",\n                        mround(r * (scr[2] - size)),\n                        \" x e \"\n                    ].join(\"\")\n                );\n            } else if (type === \"^\") {\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * scr[1]),\n                        \", \",\n                        mround(r * (scr[2] - size)),\n                        \" l \",\n                        mround(r * (scr[1] - sqrt32)),\n                        \", \",\n                        mround(r * (scr[2] + s05)),\n                        \" l \",\n                        mround(r * (scr[1] + sqrt32)),\n                        \", \",\n                        mround(r * (scr[2] + s05)),\n                        \" x e \"\n                    ].join(\"\")\n                );\n            } else if (type === \"v\") {\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * scr[1]),\n                        \", \",\n                        mround(r * (scr[2] + size)),\n                        \" l \",\n                        mround(r * (scr[1] - sqrt32)),\n                        \", \",\n                        mround(r * (scr[2] - s05)),\n                        \" l \",\n                        mround(r * (scr[1] + sqrt32)),\n                        \", \",\n                        mround(r * (scr[2] - s05)),\n                        \" x e \"\n                    ].join(\"\")\n                );\n            } else if (type === \">\") {\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * (scr[1] + size)),\n                        \", \",\n                        mround(r * scr[2]),\n                        \" l \",\n                        mround(r * (scr[1] - s05)),\n                        \", \",\n                        mround(r * (scr[2] - sqrt32)),\n                        \" l \",\n                        mround(r * (scr[1] - s05)),\n                        \", \",\n                        mround(r * (scr[2] + sqrt32)),\n                        \" l \",\n                        mround(r * (scr[1] + size)),\n                        \", \",\n                        mround(r * scr[2])\n                    ].join(\"\")\n                );\n            } else if (type === \"<\") {\n                s.push(\n                    [\n                        \" m \",\n                        mround(r * (scr[1] - size)),\n                        \", \",\n                        mround(r * scr[2]),\n                        \" l \",\n                        mround(r * (scr[1] + s05)),\n                        \", \",\n                        mround(r * (scr[2] - sqrt32)),\n                        \" l \",\n                        mround(r * (scr[1] + s05)),\n                        \", \",\n                        mround(r * (scr[2] + sqrt32)),\n                        \" x e \"\n                    ].join(\"\")\n                );\n            }\n\n            return s;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updatePathStringPrim: function (el) {\n            var i,\n                scr,\n                pStr = [],\n                r = this.resolution,\n                mround = Math.round,\n                symbm = \" m \",\n                symbl = \" l \",\n                symbc = \" c \",\n                nextSymb = symbm,\n                len = Math.min(el.numberPoints, 8192); // otherwise IE 7 crashes in hilbert.html\n\n            if (el.numberPoints <= 0) {\n                return \"\";\n            }\n            len = Math.min(len, el.points.length);\n\n            if (el.bezierDegree === 1) {\n                /*\n                if (isNotPlot && el.board.options.curve.RDPsmoothing) {\n                    el.points = Numerics.RamerDouglasPeucker(el.points, 1.0);\n                }\n                */\n\n                for (i = 0; i < len; i++) {\n                    scr = el.points[i].scrCoords;\n                    if (isNaN(scr[1]) || isNaN(scr[2])) {\n                        // PenUp\n                        nextSymb = symbm;\n                    } else {\n                        // IE has problems with values  being too far away.\n                        if (scr[1] > 20000.0) {\n                            scr[1] = 20000.0;\n                        } else if (scr[1] < -20000.0) {\n                            scr[1] = -20000.0;\n                        }\n\n                        if (scr[2] > 20000.0) {\n                            scr[2] = 20000.0;\n                        } else if (scr[2] < -20000.0) {\n                            scr[2] = -20000.0;\n                        }\n\n                        pStr.push(\n                            [nextSymb, mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\")\n                        );\n                        nextSymb = symbl;\n                    }\n                }\n            } else if (el.bezierDegree === 3) {\n                i = 0;\n                while (i < len) {\n                    scr = el.points[i].scrCoords;\n                    if (isNaN(scr[1]) || isNaN(scr[2])) {\n                        // PenUp\n                        nextSymb = symbm;\n                    } else {\n                        pStr.push(\n                            [nextSymb, mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\")\n                        );\n                        if (nextSymb === symbc) {\n                            i += 1;\n                            scr = el.points[i].scrCoords;\n                            pStr.push(\n                                [\" \", mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\")\n                            );\n                            i += 1;\n                            scr = el.points[i].scrCoords;\n                            pStr.push(\n                                [\" \", mround(r * scr[1]), \", \", mround(r * scr[2])].join(\"\")\n                            );\n                        }\n                        nextSymb = symbc;\n                    }\n                    i += 1;\n                }\n            }\n            pStr.push(\" e\");\n            return pStr;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updatePathStringBezierPrim: function (el) {\n            var i,\n                j,\n                k,\n                scr,\n                lx,\n                ly,\n                pStr = [],\n                f = Type.evaluate(el.visProp.strokewidth),\n                r = this.resolution,\n                mround = Math.round,\n                symbm = \" m \",\n                symbl = \" c \",\n                nextSymb = symbm,\n                isNoPlot = Type.evaluate(el.visProp.curvetype) !== \"plot\",\n                len = Math.min(el.numberPoints, 8192); // otherwise IE 7 crashes in hilbert.html\n\n            if (el.numberPoints <= 0) {\n                return \"\";\n            }\n            if (isNoPlot && el.board.options.curve.RDPsmoothing) {\n                el.points = Numerics.RamerDouglasPeucker(el.points, 1.0);\n            }\n            len = Math.min(len, el.points.length);\n\n            for (j = 1; j < 3; j++) {\n                nextSymb = symbm;\n                for (i = 0; i < len; i++) {\n                    scr = el.points[i].scrCoords;\n                    if (isNaN(scr[1]) || isNaN(scr[2])) {\n                        // PenUp\n                        nextSymb = symbm;\n                    } else {\n                        // IE has problems with values  being too far away.\n                        if (scr[1] > 20000.0) {\n                            scr[1] = 20000.0;\n                        } else if (scr[1] < -20000.0) {\n                            scr[1] = -20000.0;\n                        }\n\n                        if (scr[2] > 20000.0) {\n                            scr[2] = 20000.0;\n                        } else if (scr[2] < -20000.0) {\n                            scr[2] = -20000.0;\n                        }\n\n                        if (nextSymb === symbm) {\n                            pStr.push(\n                                [nextSymb, mround(r * scr[1]), \" \", mround(r * scr[2])].join(\"\")\n                            );\n                        } else {\n                            k = 2 * j;\n                            pStr.push(\n                                [\n                                    nextSymb,\n                                    mround(\n                                        r *\n                                            (lx +\n                                                (scr[1] - lx) * 0.333 +\n                                                f * (k * Math.random() - j))\n                                    ),\n                                    \" \",\n                                    mround(\n                                        r *\n                                            (ly +\n                                                (scr[2] - ly) * 0.333 +\n                                                f * (k * Math.random() - j))\n                                    ),\n                                    \" \",\n                                    mround(\n                                        r *\n                                            (lx +\n                                                (scr[1] - lx) * 0.666 +\n                                                f * (k * Math.random() - j))\n                                    ),\n                                    \" \",\n                                    mround(\n                                        r *\n                                            (ly +\n                                                (scr[2] - ly) * 0.666 +\n                                                f * (k * Math.random() - j))\n                                    ),\n                                    \" \",\n                                    mround(r * scr[1]),\n                                    \" \",\n                                    mround(r * scr[2])\n                                ].join(\"\")\n                            );\n                        }\n                        nextSymb = symbl;\n                        lx = scr[1];\n                        ly = scr[2];\n                    }\n                }\n            }\n            pStr.push(\" e\");\n            return pStr;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updatePolygonPrim: function (node, el) {\n            var i,\n                len = el.vertices.length,\n                r = this.resolution,\n                scr,\n                pStr = [];\n\n            this._setAttr(node, \"stroked\", \"false\");\n            scr = el.vertices[0].coords.scrCoords;\n\n            if (isNaN(scr[1] + scr[2])) {\n                return;\n            }\n\n            pStr.push(\n                [\"m \", Math.floor(r * scr[1]), \",\", Math.floor(r * scr[2]), \" l \"].join(\"\")\n            );\n\n            for (i = 1; i < len - 1; i++) {\n                if (el.vertices[i].isReal) {\n                    scr = el.vertices[i].coords.scrCoords;\n\n                    if (isNaN(scr[1] + scr[2])) {\n                        return;\n                    }\n\n                    pStr.push(Math.floor(r * scr[1]) + \",\" + Math.floor(r * scr[2]));\n                } else {\n                    this.updatePathPrim(node, \"\", el.board);\n                    return;\n                }\n                if (i < len - 2) {\n                    pStr.push(\", \");\n                }\n            }\n            pStr.push(\" x e\");\n            this.updatePathPrim(node, pStr, el.board);\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        updateRectPrim: function (node, x, y, w, h) {\n            node.style.left = Math.floor(x) + \"px\";\n            node.style.top = Math.floor(y) + \"px\";\n\n            if (w >= 0) {\n                node.style.width = w + \"px\";\n            }\n\n            if (h >= 0) {\n                node.style.height = h + \"px\";\n            }\n        },\n\n        /* **************************\n         *  Set Attributes\n         * **************************/\n\n        // Already documented in JXG.AbstractRenderer\n        setPropertyPrim: function (node, key, val) {\n            var keyVml = \"\",\n                v;\n\n            switch (key) {\n                case \"stroke\":\n                    keyVml = \"strokecolor\";\n                    break;\n                case \"stroke-width\":\n                    keyVml = \"strokeweight\";\n                    break;\n                case \"stroke-dasharray\":\n                    keyVml = \"dashstyle\";\n                    break;\n            }\n\n            if (keyVml !== \"\") {\n                v = Type.evaluate(val);\n                this._setAttr(node, keyVml, v);\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        display: function (el, val) {\n            if (el && el.rendNode) {\n                el.visPropOld.visible = val;\n                if (val) {\n                    el.rendNode.style.visibility = \"inherit\";\n                } else {\n                    el.rendNode.style.visibility = \"hidden\";\n                }\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        show: function (el) {\n            JXG.deprecated(\"Board.renderer.show()\", \"Board.renderer.display()\");\n\n            if (el && el.rendNode) {\n                el.rendNode.style.visibility = \"inherit\";\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        hide: function (el) {\n            JXG.deprecated(\"Board.renderer.hide()\", \"Board.renderer.display()\");\n\n            if (el && el.rendNode) {\n                el.rendNode.style.visibility = \"hidden\";\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        setDashStyle: function (el, visProp) {\n            var node;\n            if (visProp.dash >= 0) {\n                node = el.rendNodeStroke;\n                this._setAttr(node, \"dashstyle\", this.dashArray[visProp.dash]);\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        setGradient: function (el) {\n            var nodeFill = el.rendNodeFill,\n                ev_g = Type.evaluate(el.visProp.gradient);\n\n            if (ev_g === \"linear\") {\n                this._setAttr(nodeFill, \"type\", \"gradient\");\n                this._setAttr(\n                    nodeFill,\n                    \"color2\",\n                    Type.evaluate(el.visProp.gradientsecondcolor)\n                );\n                this._setAttr(\n                    nodeFill,\n                    \"opacity2\",\n                    Type.evaluate(el.visProp.gradientsecondopacity)\n                );\n                this._setAttr(nodeFill, \"angle\", Type.evaluate(el.visProp.gradientangle));\n            } else if (ev_g === \"radial\") {\n                this._setAttr(nodeFill, \"type\", \"gradientradial\");\n                this._setAttr(\n                    nodeFill,\n                    \"color2\",\n                    Type.evaluate(el.visProp.gradientsecondcolor)\n                );\n                this._setAttr(\n                    nodeFill,\n                    \"opacity2\",\n                    Type.evaluate(el.visProp.gradientsecondopacity)\n                );\n                this._setAttr(\n                    nodeFill,\n                    \"focusposition\",\n                    Type.evaluate(el.visProp.gradientpositionx) * 100 +\n                        \"%,\" +\n                        Type.evaluate(el.visProp.gradientpositiony) * 100 +\n                        \"%\"\n                );\n                this._setAttr(nodeFill, \"focussize\", \"0,0\");\n            } else {\n                this._setAttr(nodeFill, \"type\", \"solid\");\n            }\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        setObjectFillColor: function (el, color, opacity) {\n            var rgba = Type.evaluate(color),\n                c,\n                rgbo,\n                o = Type.evaluate(opacity),\n                oo,\n                node = el.rendNode;\n\n            o = o > 0 ? o : 0;\n\n            if (el.visPropOld.fillcolor === rgba && el.visPropOld.fillopacity === o) {\n                return;\n            }\n\n            if (Type.exists(rgba) && rgba !== false) {\n                // RGB, not RGBA\n                if (rgba.length !== 9) {\n                    c = rgba;\n                    oo = o;\n                    // True RGBA, not RGB\n                } else {\n                    rgbo = Color.rgba2rgbo(rgba);\n                    c = rgbo[0];\n                    oo = o * rgbo[1];\n                }\n                if (c === \"none\" || c === false) {\n                    this._setAttr(el.rendNode, \"filled\", \"false\");\n                } else {\n                    this._setAttr(el.rendNode, \"filled\", \"true\");\n                    this._setAttr(el.rendNode, \"fillcolor\", c);\n\n                    if (Type.exists(oo) && el.rendNodeFill) {\n                        this._setAttr(el.rendNodeFill, \"opacity\", oo * 100 + \"%\");\n                    }\n                }\n                if (el.type === Const.OBJECT_TYPE_IMAGE) {\n                    /*\n                    t = el.rendNode.style.filter.toString();\n                    if (t.match(/alpha/)) {\n                        el.rendNode.style.filter = t.replace(/alpha\\(opacity *= *[0-9\\.]+\\)/, 'alpha(opacity = ' + (oo * 100) + ')');\n                    } else {\n                        el.rendNode.style.filter += ' alpha(opacity = ' + (oo * 100) + ')';\n                    }\n                    */\n                    if (node.filters.length > 1) {\n                        // Why am I sometimes seeing node.filters.length==0 here when I move the pointer around near [0,0]?\n                        // Setting axes:true shows text labels!\n                        node.filters.item(1).opacity = Math.round(oo * 100); // Why does setObjectFillColor not use Math.round?\n                        node.filters.item(1).enabled = true;\n                    }\n                }\n            }\n            el.visPropOld.fillcolor = rgba;\n            el.visPropOld.fillopacity = o;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        setObjectStrokeColor: function (el, color, opacity) {\n            var rgba = Type.evaluate(color),\n                c,\n                rgbo,\n                o = Type.evaluate(opacity),\n                oo,\n                node = el.rendNode,\n                nodeStroke;\n\n            o = o > 0 ? o : 0;\n\n            if (el.visPropOld.strokecolor === rgba && el.visPropOld.strokeopacity === o) {\n                return;\n            }\n\n            // this looks like it could be merged with parts of VMLRenderer.setObjectFillColor\n\n            if (Type.exists(rgba) && rgba !== false) {\n                // RGB, not RGBA\n                if (rgba.length !== 9) {\n                    c = rgba;\n                    oo = o;\n                    // True RGBA, not RGB\n                } else {\n                    rgbo = color.rgba2rgbo(rgba);\n                    c = rgbo[0];\n                    oo = o * rgbo[1];\n                }\n                if (el.elementClass === Const.OBJECT_CLASS_TEXT) {\n                    //node.style.filter = ' alpha(opacity = ' + oo + ')';\n                    /*\n                    t = node.style.filter.toString();\n                    if (t.match(/alpha/)) {\n                        node.style.filter =\n                        t.replace(/alpha\\(opacity *= *[0-9\\.]+\\)/, 'alpha(opacity = ' + oo + ')');\n                    } else {\n                        node.style.filter += ' alpha(opacity = ' + oo + ')';\n                    }\n                    */\n                    if (node.filters.length > 1) {\n                        // Why am I sometimes seeing node.filters.length==0 here when I move the pointer around near [0,0]?\n                        // Setting axes:true shows text labels!\n                        node.filters.item(1).opacity = Math.round(oo * 100);\n                        node.filters.item(1).enabled = true;\n                    }\n\n                    node.style.color = c;\n                } else {\n                    if (c !== false) {\n                        this._setAttr(node, \"stroked\", \"true\");\n                        this._setAttr(node, \"strokecolor\", c);\n                    }\n\n                    nodeStroke = el.rendNodeStroke;\n                    if (Type.exists(oo) && el.type !== Const.OBJECT_TYPE_IMAGE) {\n                        this._setAttr(nodeStroke, \"opacity\", oo * 100 + \"%\");\n                    }\n                }\n            }\n            el.visPropOld.strokecolor = rgba;\n            el.visPropOld.strokeopacity = o;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        setObjectStrokeWidth: function (el, width) {\n            var w = Type.evaluate(width),\n                node;\n\n            if (isNaN(w) || el.visPropOld.strokewidth === w) {\n                return;\n            }\n\n            node = el.rendNode;\n            this.setPropertyPrim(node, \"stroked\", \"true\");\n\n            if (Type.exists(w)) {\n                this.setPropertyPrim(node, \"stroke-width\", w);\n                if (w === 0 && Type.exists(el.rendNodeStroke)) {\n                    this._setAttr(node, \"stroked\", \"false\");\n                }\n            }\n\n            el.visPropOld.strokewidth = w;\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        setShadow: function (el) {\n            var nodeShadow = el.rendNodeShadow,\n                ev_s = Type.evaluate(el.visProp.shadow);\n\n            if (!nodeShadow || el.visPropOld.shadow === ev_s) {\n                return;\n            }\n\n            if (ev_s) {\n                this._setAttr(nodeShadow, \"On\", \"True\");\n                this._setAttr(nodeShadow, \"Offset\", \"3pt,3pt\");\n                this._setAttr(nodeShadow, \"Opacity\", \"60%\");\n                this._setAttr(nodeShadow, \"Color\", \"#aaaaaa\");\n            } else {\n                this._setAttr(nodeShadow, \"On\", \"False\");\n            }\n\n            el.visPropOld.shadow = ev_s;\n        },\n\n        /* **************************\n         * renderer control\n         * **************************/\n\n        // Already documented in JXG.AbstractRenderer\n        suspendRedraw: function () {\n            this.container.style.display = \"none\";\n        },\n\n        // Already documented in JXG.AbstractRenderer\n        unsuspendRedraw: function () {\n            this.container.style.display = \"\";\n        }\n    }\n);\n\nexport default JXG.VMLRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}