{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  attemptAuth(credentials) {\n    return this.http.post(this.loginUrl, credentials, httpOptions);\n  }\n  signUp(info) {\n    return this.http.post(this.signupUrl, info, httpOptions);\n  }\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://127.0.0.1:8080/backend-1.0-SNAPSHOT/api/auth/login';\n    this.signupUrl = 'http://127.0.0.1:8080/backend-1.0-SNAPSHOT/api/auth/register';\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","AuthService","attemptAuth","credentials","http","post","loginUrl","signUp","info","signupUrl","constructor","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\study things\\web\\weblab4-main\\frontend\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Token } from '../dto/token';\nimport { LoginInfo } from '../dto/login-info';\nimport { RegisterInfo } from '../dto/register-info';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'http://127.0.0.1:8080/backend-1.0-SNAPSHOT/api/auth/login';\n  private signupUrl = 'http://127.0.0.1:8080/backend-1.0-SNAPSHOT/api/auth/register';\n\n  attemptAuth(credentials: LoginInfo): Observable<Token> {\n    return this.http.post<Token>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: RegisterInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n\n  constructor(private http: HttpClient) { }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOG,WAAW;EAKtBC,WAAWA,CAACC,WAAsB;IAChC,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAQ,IAAI,CAACC,QAAQ,EAAEH,WAAW,EAAEJ,WAAW,CAAC;EACvE;EAEAQ,MAAMA,CAACC,IAAkB;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACC,IAAI,CAAS,IAAI,CAACI,SAAS,EAAED,IAAI,EAAET,WAAW,CAAC;EAClE;EAEAW,YAAoBN,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAXhB,KAAAE,QAAQ,GAAG,2DAA2D;IACtE,KAAAG,SAAS,GAAG,8DAA8D;EAU1C;EAAC,QAAAE,CAAA,G;qBAb9BV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}