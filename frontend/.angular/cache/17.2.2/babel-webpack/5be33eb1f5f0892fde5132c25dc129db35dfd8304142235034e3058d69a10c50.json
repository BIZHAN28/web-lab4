{"ast":null,"code":"/*\n    Copyright 2008-2023\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true*/\n/*jslint nomen: true, plusplus: true*/\n\n/**\n * @fileoverview In this file the EventEmitter interface is defined.\n */\n\nimport JXG from \"../jxg\";\nimport Type from \"./type\";\n\n/**\n * Event namespace\n * @namespace\n */\nJXG.EventEmitter = {\n  /**\n   * Holds the registered event handlers.\n   * @type Object\n   */\n  eventHandlers: {},\n  /**\n   * Events can be suspended to prevent endless loops.\n   * @type Object\n   */\n  suspended: {},\n  /**\n   * Triggers all event handlers of this element for a given event.\n   * @param {Array} event\n   * @param {Array} args The arguments passed onto the event handler\n   * @returns Reference to the object.\n   */\n  trigger: function (event, args) {\n    var i, j, h, evt, len1, len2;\n    len1 = event.length;\n    for (j = 0; j < len1; j++) {\n      evt = this.eventHandlers[event[j]];\n      if (!this.suspended[event[j]]) {\n        this.suspended[event[j]] = true;\n        if (evt) {\n          len2 = evt.length;\n          for (i = 0; i < len2; i++) {\n            h = evt[i];\n            h.handler.apply(h.context, args);\n          }\n        }\n        this.suspended[event[j]] = false;\n      }\n    }\n    return this;\n  },\n  /**\n   * Register a new event handler. For a list of possible events see documentation\n   * of the elements and objects implementing\n   * the {@link EventEmitter} interface.\n   *\n   * As of version 1.5.0, it is only possible to access the element via \"this\" if the event listener\n   * is supplied as regular JavaScript function and not as arrow function.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   * @param {Object} [context] The context the handler will be called in, default is the element itself.\n   * @returns Reference to the object.\n   */\n  on: function (event, handler, context) {\n    if (!Type.isArray(this.eventHandlers[event])) {\n      this.eventHandlers[event] = [];\n    }\n    context = Type.def(context, this);\n    this.eventHandlers[event].push({\n      handler: handler,\n      context: context\n    });\n    return this;\n  },\n  /**\n   * Unregister an event handler.\n   * @param {String} event\n   * @param {Function} [handler]\n   * @returns Reference to the object.\n   */\n  off: function (event, handler) {\n    var i;\n    if (!event || !Type.isArray(this.eventHandlers[event])) {\n      return this;\n    }\n    if (handler) {\n      i = Type.indexOf(this.eventHandlers[event], handler, \"handler\");\n      if (i > -1) {\n        this.eventHandlers[event].splice(i, 1);\n      }\n      if (this.eventHandlers[event].length === 0) {\n        delete this.eventHandlers[event];\n      }\n    } else {\n      delete this.eventHandlers[event];\n    }\n    return this;\n  },\n  /**\n   * @description Implements the functionality from this interface in the given object.\n   * All objects getting their event handling\n   * capabilities from this method should document it by adding\n   * the <tt>on, off, triggerEventHandlers</tt> via the\n   * borrows tag as methods to their documentation:\n   * <pre>@borrows JXG.EventEmitter#on as this.on</pre>\n   * @param {Object} o\n   */\n  eventify: function (o) {\n    o.eventHandlers = {};\n    o.on = this.on;\n    o.off = this.off;\n    o.triggerEventHandlers = this.trigger;\n    o.trigger = this.trigger;\n    o.suspended = {};\n  }\n};\nexport default JXG.EventEmitter;","map":{"version":3,"names":["JXG","Type","EventEmitter","eventHandlers","suspended","trigger","event","args","i","j","h","evt","len1","len2","length","handler","apply","context","on","isArray","def","push","off","indexOf","splice","eventify","o","triggerEventHandlers"],"sources":["D:/study things/web/weblab4-main/node_modules/jsxgraph/src/utils/event.js"],"sourcesContent":["/*\n    Copyright 2008-2023\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true*/\n/*jslint nomen: true, plusplus: true*/\n\n/**\n * @fileoverview In this file the EventEmitter interface is defined.\n */\n\nimport JXG from \"../jxg\";\nimport Type from \"./type\";\n\n/**\n * Event namespace\n * @namespace\n */\nJXG.EventEmitter = {\n    /**\n     * Holds the registered event handlers.\n     * @type Object\n     */\n    eventHandlers: {},\n\n    /**\n     * Events can be suspended to prevent endless loops.\n     * @type Object\n     */\n    suspended: {},\n\n    /**\n     * Triggers all event handlers of this element for a given event.\n     * @param {Array} event\n     * @param {Array} args The arguments passed onto the event handler\n     * @returns Reference to the object.\n     */\n    trigger: function (event, args) {\n        var i, j, h, evt, len1, len2;\n\n        len1 = event.length;\n        for (j = 0; j < len1; j++) {\n            evt = this.eventHandlers[event[j]];\n            if (!this.suspended[event[j]]) {\n                this.suspended[event[j]] = true;\n                if (evt) {\n                    len2 = evt.length;\n                    for (i = 0; i < len2; i++) {\n                        h = evt[i];\n                        h.handler.apply(h.context, args);\n                    }\n                }\n\n                this.suspended[event[j]] = false;\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Register a new event handler. For a list of possible events see documentation\n     * of the elements and objects implementing\n     * the {@link EventEmitter} interface.\n     *\n     * As of version 1.5.0, it is only possible to access the element via \"this\" if the event listener\n     * is supplied as regular JavaScript function and not as arrow function.\n     *\n     * @param {String} event\n     * @param {Function} handler\n     * @param {Object} [context] The context the handler will be called in, default is the element itself.\n     * @returns Reference to the object.\n     */\n    on: function (event, handler, context) {\n        if (!Type.isArray(this.eventHandlers[event])) {\n            this.eventHandlers[event] = [];\n        }\n\n        context = Type.def(context, this);\n\n        this.eventHandlers[event].push({\n            handler: handler,\n            context: context\n        });\n\n        return this;\n    },\n\n    /**\n     * Unregister an event handler.\n     * @param {String} event\n     * @param {Function} [handler]\n     * @returns Reference to the object.\n     */\n    off: function (event, handler) {\n        var i;\n\n        if (!event || !Type.isArray(this.eventHandlers[event])) {\n            return this;\n        }\n\n        if (handler) {\n            i = Type.indexOf(this.eventHandlers[event], handler, \"handler\");\n            if (i > -1) {\n                this.eventHandlers[event].splice(i, 1);\n            }\n\n            if (this.eventHandlers[event].length === 0) {\n                delete this.eventHandlers[event];\n            }\n        } else {\n            delete this.eventHandlers[event];\n        }\n\n        return this;\n    },\n\n    /**\n     * @description Implements the functionality from this interface in the given object.\n     * All objects getting their event handling\n     * capabilities from this method should document it by adding\n     * the <tt>on, off, triggerEventHandlers</tt> via the\n     * borrows tag as methods to their documentation:\n     * <pre>@borrows JXG.EventEmitter#on as this.on</pre>\n     * @param {Object} o\n     */\n    eventify: function (o) {\n        o.eventHandlers = {};\n        o.on = this.on;\n        o.off = this.off;\n        o.triggerEventHandlers = this.trigger;\n        o.trigger = this.trigger;\n        o.suspended = {};\n    }\n};\n\nexport default JXG.EventEmitter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}